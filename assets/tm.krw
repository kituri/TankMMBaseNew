﻿编号,科技名称,加成属性类型[1],加成属性数值[1],加成属性类型[2],加成属性数值[2],加成属性类型[3],加成属性数值[3],追加属性标签组,原型技能,基本标签,略称后缀,全称后缀,主武器槽[1],主武器槽[2],主武器槽[3],主武器槽[4],主武器槽[5],主武器槽[6],主武器槽[7],主武器槽[8],主武器槽[9],名字,角标,星级,图标,图中位置,板块等级,点亮消耗,点亮消耗,点亮消耗,点亮消耗,点亮消耗,点亮消耗,置换币,置换费,弹药种类,图片路径
1101,小口径风帽穿甲弹科技,火力,100,穿甲,80,命中,15,风帽 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,风帽,风帽穿甲弹,风帽穿甲弹,20mm机关炮塔,美M式37mm炮塔,35/36式37mm坦克炮塔,40mm速射2磅炮塔,SA式47mm炮塔,,,,,风帽穿甲弹(小口径),风帽,1,导弹_小口径风帽穿甲弹科技,1,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,常规弹,main_gun/icon_tech_main_gun_ap_01.png
1102,中口径风帽穿甲弹科技,火力,125,穿甲,75,命中,15,风帽 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,风帽,风帽穿甲弹,风帽穿甲弹,美M式75mm炮塔,76.2mm野战速射17磅炮塔,76.2mm减重17磅炮塔,84mm速射20磅炮塔,,,,,,风帽穿甲弹(中口径),风帽,1,导弹_中口径风帽穿甲弹科技,2,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,常规弹,main_gun/icon_tech_main_gun_ap_02.png
1103,大口径风帽穿甲弹科技,火力,150,穿甲,75,命中,15,风帽 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,风帽,风帽穿甲弹,风帽穿甲弹,美M式90mm炮塔,苏D式122mm坦克炮塔,25磅榴弹炮塔,59式100mm线膛炮塔,40式128mm反坦克炮塔,,,,,风帽穿甲弹(大口径),风帽,1,导弹_大口径风帽穿甲弹科技,3,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,常规弹,main_gun/icon_tech_main_gun_ap_03.png
1104,中口径穿甲爆破弹科技,火力,315,穿甲,35,,,爆破 火力5星技能评价 穿甲3星技能评价,默认穿甲弹,爆破,穿甲爆破弹,高爆内芯穿甲弹,美M7式76.2mm炮塔,37式75mm突击炮塔,40式75mm突击炮塔,39式75mm反坦克炮塔,,,,,,穿甲爆破弹(中口径),爆破,1,导弹_中口径穿甲爆破弹科技,2,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,常规弹,main_gun/icon_tech_main_gun_ap_04.png
1105,大口径穿甲爆破弹科技,火力,350,穿甲,30,,,爆破 火力5星技能评价 穿甲3星技能评价,默认穿甲弹,爆破,穿甲爆破,高爆内芯穿甲弹,苏BS式100mm炮塔,36式88mm坦克炮塔,美M式155mm加农炮塔,94mm速射32磅炮塔,,,,,,穿甲爆破弹(大口径),爆破,1,导弹_大口径穿甲爆破弹科技,3,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,常规弹,main_gun/icon_tech_main_gun_ap_05.png
1106,小口径穿甲燃烧弹科技,火力,300,穿甲,90,,,燃烧 火力4星技能评价 穿甲4星技能评价,默认穿甲弹,燃烧,穿甲燃烧弹,穿甲燃烧弹,苏M式37mm炮塔,苏M式45mm炮塔,20mm机关炮塔,38式50mm坦克炮塔,法SA式25mm炮塔,,,,,穿甲燃烧弹(小口径),燃烧,1,导弹_小口径穿甲燃烧弹科技,1,3,科技点,125,科技素材1型,4,研发图谱1阶,3,银币,5500,常规弹,main_gun/icon_tech_main_gun_ap_06.png
1107,中口径穿甲燃烧弹科技,火力,345,穿甲,85,,,燃烧 火力4星技能评价 穿甲4星技能评价,默认穿甲弹,燃烧,穿甲燃烧弹,穿甲燃烧弹,美M式75mm炮塔,40式75mm反坦克炮塔,84mm速射20磅炮塔,美M式76.2mm连发炮塔,,,,,,穿甲燃烧弹(中口径),燃烧,1,导弹_中口径穿甲燃烧弹科技,2,3,科技点,125,科技素材1型,4,研发图谱1阶,3,银币,5500,常规弹,main_gun/icon_tech_main_gun_ap_07.png
1108,小口径曳光穿甲弹科技,火力,245,穿甲,135,,,指向 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,指向,曳光穿甲弹,曳光穿甲弹,35/36式37mm坦克炮塔,40mm速射2磅炮塔,苏M式37mm炮塔,苏30mm自动炮塔,法SA式25mm炮塔,,,,,曳光穿甲弹(小口径),指向,1,导弹_小口径曳光穿甲弹科技,1,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,7500,常规弹,main_gun/icon_tech_main_gun_ap_08.png
1109,中口径曳光穿甲弹科技,火力,295,穿甲,125,,,指向 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,指向,曳光穿甲弹,曳光穿甲弹,76.2mm减重17磅炮塔,美M7式76.2mm炮塔,美M式76.2mm连发炮塔,39式75mm反坦克炮塔,,,,,,曳光穿甲弹(中口径),指向,1,导弹_中口径曳光穿甲弹科技,2,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,7500,常规弹,main_gun/icon_tech_main_gun_ap_09.png
1110,大口径曳光穿甲弹科技,火力,345,穿甲,120,,,指向 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,指向,曳光穿甲弹,曳光穿甲弹,美M式90mm炮塔,苏D式122mm坦克炮塔,59式100mm线膛炮塔,94mm速射32磅炮塔,,,,,,曳光穿甲弹(大口径),指向,1,导弹_大口径曳光穿甲弹科技,3,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,7500,常规弹,main_gun/icon_tech_main_gun_ap_10.png
1111,小口径被帽穿甲弹科技,火力,275,穿甲,150,,,钝头转正 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,钝头转正,被帽穿甲弹,被帽穿甲弹,38式50mm坦克炮塔,苏M式45mm炮塔,SA式47mm炮塔,美M式37mm炮塔,38式37mm坦克炮塔,苏30mm自动炮塔,,,,被帽穿甲弹(小口径),钝头转正,1,导弹_小口径被帽穿甲弹科技,1,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,常规弹,main_gun/icon_tech_main_gun_ap_11.png
1112,中口径被帽穿甲弹科技,火力,335,穿甲,140,,,钝头转正 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,钝头转正,被帽穿甲弹,被帽穿甲弹,37式75mm坦克炮塔,40式75mm坦克炮塔,37式75mm突击炮塔,40式75mm突击炮塔,76.2mm野战速射17磅炮塔,84mm速射20磅炮塔,,,,被帽穿甲弹(中口径),钝头转正,1,导弹_中口径被帽穿甲弹科技,2,5,科技点,380,科技素材1型,9,研发图谱2阶,4,银币,9000,常规弹,main_gun/icon_tech_main_gun_ap_12.png
1113,大口径被帽穿甲弹科技,火力,390,穿甲,130,,,钝头转正 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,钝头转正,被帽穿甲弹,被帽穿甲弹,44式128mm反坦克炮塔,苏BS式100mm炮塔,43式88mm反坦克炮塔,59式100mm线膛炮塔,40式128mm反坦克炮塔,,,,,被帽穿甲弹(大口径),钝头转正,1,导弹_大口径被帽穿甲弹科技,3,5,科技点,380,科技素材1型,9,研发图谱2阶,4,银币,9000,常规弹,main_gun/icon_tech_main_gun_ap_13.png
1201,小口径被帽风帽穿甲弹科技,火力,350,穿甲,255,命中,35,风帽 钝头转正 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,风帽 钝头转正,被帽风帽穿甲弹,被帽风帽穿甲弹,20mm机关炮塔,美M式37mm炮塔,35/36式37mm坦克炮塔,40mm速射2磅炮塔,SA式47mm炮塔,,,,,被帽风帽穿甲弹(小口径),风帽 钝头转正,2,导弹_小口径被帽风帽穿甲弹科技,1,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,常规弹,main_gun/icon_tech_main_gun_ap_14.png
1202,中口径被帽风帽穿甲弹科技,火力,440,穿甲,240,命中,35,风帽 钝头转正 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,风帽 钝头转正,被帽风帽穿甲弹,被帽风帽穿甲弹,美M式75mm炮塔,76.2mm野战速射17磅炮塔,76.2mm减重17磅炮塔,84mm速射20磅炮塔,,,,,,被帽风帽穿甲弹(中口径),风帽 钝头转正,2,导弹_中口径被帽风帽穿甲弹科技,2,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,常规弹,main_gun/icon_tech_main_gun_ap_15.png
1203,大口径被帽风帽穿甲弹科技,火力,525,穿甲,225,命中,35,风帽 钝头转正 火力3星技能评价 穿甲4星技能评价,默认穿甲弹,风帽 钝头转正,被帽风帽穿甲弹,被帽风帽穿甲弹,美M式90mm炮塔,苏D式122mm坦克炮塔,25磅榴弹炮塔,59式100mm线膛炮塔,40式128mm反坦克炮塔,,,,,被帽风帽穿甲弹(大口径),风帽 钝头转正,2,导弹_大口径被帽风帽穿甲弹科技,3,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,常规弹,main_gun/icon_tech_main_gun_ap_16.png
1204,中口径被帽穿甲爆破弹科技,火力,960,穿甲,100,,,爆破 钝头转正 火力5星技能评价 穿甲3星技能评价,默认穿甲弹,爆破 钝头转正,被帽穿甲爆破弹,高爆内芯被帽穿甲弹,美M7式76.2mm炮塔,37式75mm突击炮塔,40式75mm突击炮塔,39式75mm反坦克炮塔,,,,,,被帽穿甲爆破弹(中口径),爆破 钝头转正,2,导弹_中口径被帽穿甲爆破弹科技,2,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,11500,常规弹,main_gun/icon_tech_main_gun_ap_17.png
1205,大口径被帽穿甲爆破弹科技,火力,1065,穿甲,80,,,爆破 钝头转正 火力5星技能评价 穿甲3星技能评价,默认穿甲弹,爆破 钝头转正,被帽穿甲爆破弹,高爆内芯被帽穿甲弹,苏BS式100mm炮塔,36式88mm坦克炮塔,美M式155mm加农炮塔,94mm速射32磅炮塔,,,,,,被帽穿甲爆破弹(大口径),爆破 钝头转正,2,导弹_大口径被帽穿甲爆破弹科技,3,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,11500,常规弹,main_gun/icon_tech_main_gun_ap_18.png
1206,小口径被帽曳光穿甲弹科技,火力,495,穿甲,260,,,指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,指向 钝头转正,被帽曳光穿甲弹,被帽曳光穿甲弹,35/36式37mm坦克炮塔,40mm速射2磅炮塔,苏M式37mm炮塔,苏30mm自动炮塔,38式37mm坦克炮塔,法SA式25mm炮塔,,,,被帽曳光穿甲弹(小口径),指向 钝头转正,2,导弹_小口径被帽曳光穿甲弹科技,1,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,13000,常规弹,main_gun/icon_tech_main_gun_ap_19.png
1207,中口径被帽曳光穿甲弹科技,火力,595,穿甲,245,,,指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,指向 钝头转正,被帽曳光穿甲弹,被帽曳光穿甲弹,76.2mm减重17磅炮塔,美M7式76.2mm炮塔,美M式76.2mm连发炮塔,39式75mm反坦克炮塔,,,,,,被帽曳光穿甲弹(中口径),指向 钝头转正,2,导弹_中口径被帽曳光穿甲弹科技,2,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,13000,常规弹,main_gun/icon_tech_main_gun_ap_20.png
1208,大口径被帽曳光穿甲弹科技,火力,700,穿甲,225,,,指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,指向 钝头转正,被帽曳光穿甲弹,被帽曳光穿甲弹,美M式90mm炮塔,苏D式122mm坦克炮塔,59式100mm线膛炮塔,94mm速射32磅炮塔,,,,,,被帽曳光穿甲弹(大口径),指向 钝头转正,2,导弹_大口径被帽曳光穿甲弹科技,3,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,13000,常规弹,main_gun/icon_tech_main_gun_ap_21.png
1209,小口径被帽穿甲燃烧弹科技,火力,730,穿甲,210,,,燃烧 钝头转正 火力4星技能评价 穿甲4星技能评价,默认穿甲弹,燃烧 钝头转正,被帽穿甲燃烧弹,被帽穿甲燃烧弹,苏M式37mm炮塔,苏M式45mm炮塔,20mm机关炮塔,38式50mm坦克炮塔,法SA式25mm炮塔,,,,,被帽穿甲燃烧弹(小口径),燃烧 钝头转正,2,导弹_小口径被帽穿甲燃烧弹科技,1,4,科技点,2375,科技素材1型,46,研发图谱4阶,7,银币,14500,常规弹,main_gun/icon_tech_main_gun_ap_22.png
1210,中口径被帽穿甲燃烧弹科技,火力,840,穿甲,195,,,燃烧 钝头转正 火力4星技能评价 穿甲4星技能评价,默认穿甲弹,燃烧 钝头转正,被帽穿甲燃烧弹,被帽穿甲燃烧弹,美M式75mm炮塔,40式75mm反坦克炮塔,84mm速射20磅炮塔,美M式76.2mm连发炮塔,,,,,,被帽穿甲燃烧弹(中口径),燃烧 钝头转正,2,导弹_中口径被帽穿甲燃烧弹科技,2,4,科技点,2375,科技素材1型,46,研发图谱4阶,7,银币,14500,常规弹,main_gun/icon_tech_main_gun_ap_23.png
1211,小口径被帽偏重穿甲弹科技,火力,290,穿甲,390,,,突击 钝头转正 火力2星技能评价 穿甲5星技能评价,偏重穿甲弹,突击 钝头转正,被帽偏重穿甲弹,被帽偏重穿甲弹,38式50mm坦克炮塔,苏M式45mm炮塔,SA式47mm炮塔,美M式37mm炮塔,38式37mm坦克炮塔,苏30mm自动炮塔,,,,被帽偏重穿甲弹(小口径),突击 钝头转正,2,导弹_小口径被帽偏重穿甲弹科技,1,6,科技点,4090,科技素材1型,77,研发图谱4阶,9,银币,16000,常规弹,main_gun/icon_tech_main_gun_ap_24.png
1212,中口径被帽偏重穿甲弹科技,火力,395,穿甲,370,,,突击 钝头转正 火力2星技能评价 穿甲5星技能评价,偏重穿甲弹,突击 钝头转正,被帽偏重穿甲弹,被帽偏重穿甲弹,37式75mm坦克炮塔,40式75mm坦克炮塔,37式75mm突击炮塔,40式75mm突击炮塔,76.2mm野战速射17磅炮塔,84mm速射20磅炮塔,,,,被帽偏重穿甲弹(中口径),突击 钝头转正,2,导弹_中口径被帽偏重穿甲弹科技,2,5,科技点,3115,科技素材1型,60,研发图谱4阶,8,银币,16000,常规弹,main_gun/icon_tech_main_gun_ap_25.png
1213,大口径被帽偏重穿甲弹科技,火力,500,穿甲,355,,,突击 钝头转正 火力2星技能评价 穿甲5星技能评价,偏重穿甲弹,突击 钝头转正,被帽偏重穿甲弹,被帽偏重穿甲弹,44式128mm反坦克炮塔,苏BS式100mm炮塔,43式88mm反坦克炮塔,59式100mm线膛炮塔,40式128mm反坦克炮塔,,,,,被帽偏重穿甲弹(大口径),突击 钝头转正,2,导弹_大口径被帽偏重穿甲弹科技,3,5,科技点,3115,科技素材1型,60,研发图谱4阶,8,银币,16000,常规弹,main_gun/icon_tech_main_gun_ap_26.png
1301,中口径被帽风帽穿甲爆破弹科技,火力,1540,穿甲,155,命中,45,风帽 爆破 钝头转正 火力5星技能评价 穿甲3星技能评价,默认穿甲弹,风帽 爆破 钝头转正,被风帽穿甲爆破弹,高爆内芯被帽风帽穿甲弹,美M7式76.2mm炮塔,37式75mm突击炮塔,40式75mm突击炮塔,39式75mm反坦克炮塔,,,,,,被帽风帽穿甲爆破弹(中口径),风帽 爆破 钝头转正,3,导弹_中口径被帽风帽穿甲爆破弹科技,2,1,科技点,6440,科技素材1型,148,研发图谱5阶,9,银币,18500,常规弹,main_gun/icon_tech_main_gun_ap_27.png
1302,大口径被帽风帽穿甲爆破弹科技,火力,1705,穿甲,125,命中,45,风帽 爆破 钝头转正 火力5星技能评价 穿甲3星技能评价,默认穿甲弹,风帽 爆破 钝头转正,被风帽穿甲爆破弹,高爆内芯被帽风帽穿甲弹,苏BS式100mm炮塔,36式88mm坦克炮塔,美M式155mm加农炮塔,94mm速射32磅炮塔,43式88mm反坦克炮塔,40式128mm反坦克炮塔,,,,被帽风帽穿甲爆破弹(大口径),风帽 爆破 钝头转正,3,导弹_大口径被帽风帽穿甲爆破弹科技,3,1,科技点,6440,科技素材1型,148,研发图谱5阶,9,银币,18500,常规弹,main_gun/icon_tech_main_gun_ap_28.png
1303,小口径被帽风帽曳光穿甲弹科技,火力,775,穿甲,400,命中,50,风帽 指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,风帽 指向 钝头转正,被风帽曳光穿甲弹,被帽风帽指向穿甲弹,35/36式37mm坦克炮塔,40mm速射2磅炮塔,苏M式37mm炮塔,苏30mm自动炮塔,38式37mm坦克炮塔,法SA式25mm炮塔,,,,被帽风帽曳光穿甲弹(小口径),风帽 指向 钝头转正,3,导弹_小口径被帽风帽指向穿甲弹科技,1,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,常规弹,main_gun/icon_tech_main_gun_ap_29.png
1304,中口径被帽风帽曳光穿甲弹科技,火力,930,穿甲,375,命中,50,风帽 指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,风帽 指向 钝头转正,被风帽曳光穿甲弹,被帽风帽指向穿甲弹,76.2mm减重17磅炮塔,美M7式76.2mm炮塔,美M式75mm炮塔,美M式76.2mm连发炮塔,39式75mm反坦克炮塔,,,,,被帽风帽曳光穿甲弹(中口径),风帽 指向 钝头转正,3,导弹_中口径被帽风帽曳光穿甲弹科技,2,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,常规弹,main_gun/icon_tech_main_gun_ap_30.png
1305,大口径被帽风帽曳光穿甲弹科技,火力,1095,穿甲,350,命中,50,风帽 指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向穿甲弹,风帽 指向 钝头转正,被风帽曳光穿甲弹,被帽风帽曳光穿甲弹,美M式90mm炮塔,苏D式122mm坦克炮塔,25磅榴弹炮塔,59式100mm线膛炮塔,94mm速射32磅炮塔,40式128mm反坦克炮塔,,,,被帽风帽曳光穿甲弹(大口径),风帽 指向 钝头转正,3,导弹_大口径被帽风帽曳光穿甲弹科技,3,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,常规弹,main_gun/icon_tech_main_gun_ap_31.png
1306,小口径被帽风帽弹夹速射弹科技,火力,1065,穿甲,365,命中,50,风帽 速射弹夹 钝头转正 火力4星技能评价 穿甲4星技能评价,速射穿甲弹,风帽 速射弹夹 钝头转正,被风帽弹夹速射弹,速射弹夹被帽风帽穿甲弹,20mm机关炮塔,美M式37mm炮塔,35/36式37mm坦克炮塔,40mm速射2磅炮塔,SA式47mm炮塔,苏30mm自动炮塔,,,,被帽风帽弹夹速射弹(小口径),风帽 速射弹夹 钝头转正,3,导弹_小口径被帽风帽弹夹速射弹科技,1,3,科技点,8760,科技素材1型,238,研发图谱5阶,11,银币,21500,常规弹,main_gun/icon_tech_main_gun_ap_32.png
1307,小口径被帽风帽穿甲燃烧弹科技,火力,1160,穿甲,330,命中,55,风帽 燃烧 钝头转正 火力4星技能评价 穿甲4星技能评价,默认穿甲弹,风帽 燃烧 钝头转正,被风帽穿甲燃烧弹,被帽风帽穿甲燃烧弹,苏M式37mm炮塔,苏M式45mm炮塔,20mm机关炮塔,38式50mm坦克炮塔,法SA式25mm炮塔,,,,,被帽风帽穿甲燃烧弹(小口径),风帽 燃烧 钝头转正,3,导弹_小口径被帽风帽穿甲燃烧弹科技,1,4,科技点,10630,科技素材1型,300,研发图谱6阶,11,银币,22500,常规弹,main_gun/icon_tech_main_gun_ap_33.png
1308,中口径被帽风帽穿甲燃烧弹科技,火力,1335,穿甲,300,命中,55,风帽 燃烧 钝头转正 火力4星技能评价 穿甲4星技能评价,默认穿甲弹,风帽 燃烧 钝头转正,被风帽穿甲燃烧弹,被帽风帽穿甲燃烧弹,美M式75mm炮塔,40式75mm反坦克炮塔,76.2mm野战速射17磅炮塔,76.2mm减重17磅炮塔,84mm速射20磅炮塔,美M式76.2mm连发炮塔,,,,被帽风帽穿甲燃烧弹(中口径),风帽 燃烧 钝头转正,3,导弹_中口径被帽风帽穿甲燃烧弹科技,2,4,科技点,10630,科技素材1型,300,研发图谱6阶,11,银币,22500,常规弹,main_gun/icon_tech_main_gun_ap_34.png
1309,小口径被帽风帽偏重穿甲弹科技,火力,450,穿甲,595,命中,55,风帽 突击 钝头转正 火力2星技能评价 穿甲5星技能评价,偏重穿甲弹,风帽 突击 钝头转正,被风帽偏重穿甲弹,被帽风帽偏重穿甲弹,38式50mm坦克炮塔,苏M式45mm炮塔,SA式47mm炮塔,美M式37mm炮塔,38式37mm坦克炮塔,苏30mm自动炮塔,,,,被帽风帽偏重穿甲弹(小口径),风帽 突击 钝头转正,3,导弹_小口径被帽风帽偏重穿甲弹科技,1,6,科技点,15985,科技素材1型,474,研发图谱6阶,13,银币,24000,常规弹,main_gun/icon_tech_main_gun_ap_35.png
1310,中口径被帽风帽偏重穿甲弹科技,火力,615,穿甲,570,命中,55,风帽 突击 钝头转正 火力2星技能评价 穿甲5星技能评价,偏重穿甲弹,风帽 突击 钝头转正,被风帽偏重穿甲弹,被帽风帽偏重穿甲弹,37式75mm坦克炮塔,40式75mm坦克炮塔,37式75mm突击炮塔,40式75mm突击炮塔,76.2mm野战速射17磅炮塔,84mm速射20磅炮塔,,,,被帽风帽偏重穿甲弹(中口径),风帽 突击 钝头转正,3,导弹_中口径被帽风帽偏重穿甲弹科技,2,5,科技点,13015,科技素材1型,377,研发图谱6阶,12,银币,24000,常规弹,main_gun/icon_tech_main_gun_ap_36.png
1311,大口径被帽风帽偏重穿甲弹科技,火力,780,穿甲,540,命中,55,风帽 突击 钝头转正 火力2星技能评价 穿甲5星技能评价,偏重穿甲弹,风帽 突击 钝头转正,被风帽偏重穿甲弹,被帽风帽偏重穿甲弹,44式128mm反坦克炮塔,苏BS式100mm炮塔,43式88mm反坦克炮塔,苏D式122mm坦克炮塔,59式100mm线膛炮塔,94mm速射32磅炮塔,40式128mm反坦克炮塔,,,被帽风帽偏重穿甲弹(大口径),风帽 突击 钝头转正,3,导弹_大口径被帽风帽偏重穿甲弹科技,3,6,科技点,15985,科技素材1型,474,研发图谱6阶,13,银币,24000,常规弹,main_gun/icon_tech_main_gun_ap_37.png
2101,小口径风帽硬芯穿甲弹科技,火力,85,穿甲,85,命中,15,硬芯 风帽 火力2星技能评价 穿甲5星技能评价,默认硬芯穿甲弹,硬芯 风帽,风帽硬芯穿甲弹,风帽硬芯穿甲弹,35/36式37mm反坦克炮塔,20mm穿甲炮塔,39式50mm坦克炮塔,,,,,,,风帽硬芯穿甲弹(小口径),硬芯 风帽,1,导弹_小口径风帽硬芯穿甲弹科技,1,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,硬芯弹,main_gun/icon_tech_main_gun_apcr_01.png
2102,中口径风帽硬芯穿甲弹科技,火力,105,穿甲,85,命中,15,硬芯 风帽 火力2星技能评价 穿甲5星技能评价,默认硬芯穿甲弹,硬芯 风帽,风帽硬芯穿甲弹,风帽硬芯穿甲弹,F-34式76.2mm坦克炮塔,39式75mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,风帽硬芯穿甲弹(中口径),硬芯 风帽,1,导弹_中口径风帽硬芯穿甲弹科技,2,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,硬芯弹,main_gun/icon_tech_main_gun_apcr_02.png
2103,大口径风帽硬芯穿甲弹科技,火力,130,穿甲,80,命中,15,硬芯 风帽 火力2星技能评价 穿甲5星技能评价,默认硬芯穿甲弹,硬芯 风帽,风帽硬芯穿甲弹,风帽硬芯穿甲弹,苏D式122mm坦克炮塔,SA式120mm炮塔,DCA式90mm炮塔,,,,,,,风帽硬芯穿甲弹(大口径),硬芯 风帽,1,导弹_大口径风帽硬芯穿甲弹科技,3,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,硬芯弹,main_gun/icon_tech_main_gun_apcr_03.png
2104,小口径碳化硬芯穿甲弹科技,火力,55,穿甲,125,,,硬芯 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 硬脆处理,碳化硬芯穿甲弹,碳化内芯硬芯穿甲弹,20mm穿甲炮塔,苏M式45mm炮塔,ZiS式57mm坦克炮塔,,,,,,,碳化硬芯穿甲弹(小口径),硬芯 硬脆处理,1,导弹_小口径碳化硬芯穿甲弹科技,1,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,硬芯弹,main_gun/icon_tech_main_gun_apcr_04.png
2105,中口径碳化硬芯穿甲弹科技,火力,80,穿甲,120,,,硬芯 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 硬脆处理,碳化硬芯穿甲弹,碳化内芯硬芯穿甲弹,F-34式76.2mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,,碳化硬芯穿甲弹(中口径),硬芯 硬脆处理,1,导弹_中口径碳化硬芯穿甲弹科技,2,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,硬芯弹,main_gun/icon_tech_main_gun_apcr_05.png
2106,大口径碳化硬芯穿甲弹科技,火力,110,穿甲,115,,,硬芯 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 硬脆处理,碳化硬芯穿甲弹,碳化内芯硬芯穿甲弹,ZiS-S-53式85mm坦克炮塔,36式88mm坦克炮塔,DCA式90mm炮塔,,,,,,,碳化硬芯穿甲弹(大口径),硬芯 硬脆处理,1,导弹_大口径碳化硬芯穿甲弹科技,3,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,硬芯弹,main_gun/icon_tech_main_gun_apcr_06.png
2107,大口径高爆外壳硬芯弹科技,火力,370,穿甲,50,,,硬芯 爆破 火力4星技能评价 穿甲3星技能评价,默认硬芯穿甲弹,硬芯 爆破,高爆外壳硬芯弹,高爆外壳硬芯穿甲弹,ZiS-S-53式85mm坦克炮塔,SA式100mm炮塔,,,,,,,,高爆外壳硬芯弹(大口径),硬芯 爆破,1,导弹_大口径高爆外壳硬芯弹科技,1,3,科技点,125,科技素材1型,4,研发图谱1阶,3,银币,4000,硬芯弹,main_gun/icon_tech_main_gun_apcr_07.png
2108,小口径韧质硬芯穿甲弹科技,火力,225,穿甲,115,,,硬芯 韧质处理 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 韧质处理,韧质硬芯穿甲弹,高韧质内芯硬芯穿甲弹,38式37mm坦克炮塔,39式50mm坦克炮塔,ZiS式57mm坦克炮塔,,,,,,,韧质硬芯穿甲弹(小口径),硬芯 韧质处理,1,导弹_小口径韧质硬芯穿甲弹科技,1,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,5500,硬芯弹,main_gun/icon_tech_main_gun_apcr_08.png
2109,中口径韧质硬芯穿甲弹科技,火力,270,穿甲,110,,,硬芯 韧质处理 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 韧质处理,韧质硬芯穿甲弹,高韧质内芯硬芯穿甲弹,42式75mm坦克炮塔,,,,,,,,,韧质硬芯穿甲弹(中口径),硬芯 韧质处理,1,导弹_中口径韧质硬芯穿甲弹科技,2,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,5500,硬芯弹,main_gun/icon_tech_main_gun_apcr_09.png
2110,大口径韧质硬芯穿甲弹科技,火力,315,穿甲,100,,,硬芯 韧质处理 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 韧质处理,韧质硬芯穿甲弹,高韧质内芯硬芯穿甲弹,ZIS-6式107mm坦克炮塔,SA式120mm炮塔,,,,,,,,韧质硬芯穿甲弹(大口径),硬芯 韧质处理,1,导弹_大口径韧质硬芯穿甲弹科技,3,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,5500,硬芯弹,main_gun/icon_tech_main_gun_apcr_10.png
2111,中口径曳光硬芯穿甲弹科技,火力,265,穿甲,140,,,硬芯 指向 火力3星技能评价 穿甲4星技能评价,指向硬芯穿甲弹,硬芯 指向,曳光硬芯穿甲弹,曳光硬芯穿甲弹,39式75mm坦克炮塔,42式75mm坦克炮塔,,,,,,,,曳光硬芯穿甲弹(中口径),硬芯 指向,1,导弹_中口径曳光硬芯穿甲弹科技,2,5,科技点,380,科技素材1型,9,研发图谱2阶,4,银币,7500,硬芯弹,main_gun/icon_tech_main_gun_apcr_11.png
2112,大口径曳光硬芯穿甲弹科技,火力,315,穿甲,130,,,硬芯 指向 火力3星技能评价 穿甲4星技能评价,指向硬芯穿甲弹,硬芯 指向,曳光硬芯穿甲弹,曳光硬芯穿甲弹,44式128mm反坦克炮塔,苏D式122mm坦克炮塔,,,,,,,,曳光硬芯穿甲弹(大口径),硬芯 指向,1,导弹_大口径曳光硬芯穿甲弹科技,3,5,科技点,380,科技素材1型,9,研发图谱2阶,4,银币,7500,硬芯弹,main_gun/icon_tech_main_gun_apcr_12.png
2113,小口径被帽硬芯穿甲弹科技,火力,240,穿甲,160,,,硬芯 钝头转正 火力3星技能评价 穿甲4星技能评价,默认硬芯穿甲弹,硬芯 钝头转正,被帽硬芯穿甲弹,被帽硬芯穿甲弹,20mm穿甲炮塔,35/36式37mm反坦克炮塔,39式50mm坦克炮塔,,,,,,,被帽硬芯穿甲弹(小口径),硬芯 钝头转正,1,导弹_小口径被帽硬芯穿甲弹科技,1,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,硬芯弹,main_gun/icon_tech_main_gun_apcr_13.png
2114,中口径被帽硬芯穿甲弹科技,火力,295,穿甲,155,,,硬芯 钝头转正 火力3星技能评价 穿甲4星技能评价,默认硬芯穿甲弹,硬芯 钝头转正,被帽硬芯穿甲弹,被帽硬芯穿甲弹,F-34式76.2mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,,被帽硬芯穿甲弹(中口径),硬芯 钝头转正,1,导弹_中口径被帽硬芯穿甲弹科技,2,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,硬芯弹,main_gun/icon_tech_main_gun_apcr_14.png
2115,大口径被帽硬芯穿甲弹科技,火力,350,穿甲,145,,,硬芯 钝头转正 火力3星技能评价 穿甲4星技能评价,默认硬芯穿甲弹,硬芯 钝头转正,被帽硬芯穿甲弹,被帽硬芯穿甲弹,ZIS-6式107mm坦克炮塔,DCA式90mm炮塔,,,,,,,,被帽硬芯穿甲弹(大口径),硬芯 钝头转正,1,导弹_大口径被帽硬芯穿甲弹科技,3,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,硬芯弹,main_gun/icon_tech_main_gun_apcr_15.png
2201,小口径风帽碳化硬芯弹科技,火力,160,穿甲,315,命中,35,硬芯 风帽 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 风帽 硬脆处理,风帽碳化硬芯弹,风帽碳化内芯硬芯穿甲弹,20mm穿甲炮塔,苏M式45mm炮塔,ZiS式57mm坦克炮塔,,,,,,,风帽碳化硬芯弹(小口径),硬芯 风帽 硬脆处理,2,导弹_小口径风帽碳化硬芯弹科技,1,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,硬芯弹,main_gun/icon_tech_main_gun_apcr_16.png
2202,中口径风帽碳化硬芯弹科技,火力,235,穿甲,305,命中,35,硬芯 风帽 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 风帽 硬脆处理,风帽碳化硬芯弹,风帽碳化内芯硬芯穿甲弹,F-34式76.2mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,,风帽碳化硬芯弹(中口径),硬芯 风帽 硬脆处理,2,导弹_中口径风帽碳化硬芯弹科技,2,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,硬芯弹,main_gun/icon_tech_main_gun_apcr_17.png
2203,大口径风帽碳化硬芯弹科技,火力,310,穿甲,295,命中,35,硬芯 风帽 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 风帽 硬脆处理,风帽碳化硬芯弹,风帽碳化内芯硬芯穿甲弹,ZiS-S-53式85mm坦克炮塔,36式88mm坦克炮塔,DCA式90mm炮塔,,,,,,,风帽碳化硬芯弹(大口径),硬芯 风帽 硬脆处理,2,导弹_大口径风帽碳化硬芯弹科技,3,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,硬芯弹,main_gun/icon_tech_main_gun_apcr_18.png
2204,中口径风帽曳光硬芯弹科技,火力,530,穿甲,265,命中,40,硬芯 风帽 指向 火力3星技能评价 穿甲4星技能评价,指向硬芯穿甲弹,硬芯 风帽 指向,风帽曳光硬芯弹,风帽曳光硬芯穿甲弹,39式75mm坦克炮塔,42式75mm坦克炮塔,,,,,,,,风帽曳光硬芯弹(中口径),硬芯 风帽 指向,2,导弹_中口径风帽曳光硬芯弹科技,2,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,13000,硬芯弹,main_gun/icon_tech_main_gun_apcr_19.png
2205,大口径风帽曳光硬芯弹科技,火力,630,穿甲,250,命中,40,硬芯 风帽 指向 火力3星技能评价 穿甲4星技能评价,指向硬芯穿甲弹,硬芯 风帽 指向,风帽曳光硬芯弹,风帽曳光硬芯穿甲弹,44式128mm反坦克炮塔,苏D式122mm坦克炮塔,SA式100mm炮塔,,,,,,,风帽曳光硬芯弹(大口径),硬芯 风帽 指向,2,导弹_大口径风帽曳光硬芯弹科技,3,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,13000,硬芯弹,main_gun/icon_tech_main_gun_apcr_20.png
2206,小口径风帽韧质硬芯弹科技,火力,555,穿甲,265,命中,40,硬芯 风帽 韧质处理 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 风帽 韧质处理,风帽韧质硬芯弹,风帽高韧质内芯硬芯穿甲弹,38式37mm坦克炮塔,39式50mm坦克炮塔,ZiS式57mm坦克炮塔,,,,,,,风帽韧质硬芯弹(小口径),硬芯 风帽 韧质处理,2,导弹_小口径风帽韧质硬芯弹科技,1,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,14500,硬芯弹,main_gun/icon_tech_main_gun_apcr_21.png
2207,中口径风帽韧质硬芯弹科技,火力,660,穿甲,250,命中,40,硬芯 风帽 韧质处理 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 风帽 韧质处理,风帽韧质硬芯弹,风帽高韧质内芯硬芯穿甲弹,42式75mm坦克炮塔,,,,,,,,,风帽韧质硬芯弹(中口径),硬芯 风帽 韧质处理,2,导弹_中口径风帽韧质硬芯弹科技,2,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,14500,硬芯弹,main_gun/icon_tech_main_gun_apcr_22.png
2208,大口径风帽韧质硬芯弹科技,火力,770,穿甲,230,命中,40,硬芯 风帽 韧质处理 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 风帽 韧质处理,风帽韧质硬芯弹,风帽高韧质内芯硬芯穿甲弹,ZIS-6式107mm坦克炮塔,SA式120mm炮塔,,,,,,,,风帽韧质硬芯弹(大口径),硬芯 风帽 韧质处理,2,导弹_大口径风帽韧质硬芯弹科技,3,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,14500,硬芯弹,main_gun/icon_tech_main_gun_apcr_23.png
2209,大口径风帽高爆硬芯弹科技,火力,1125,穿甲,145,命中,40,硬芯 风帽 爆破 火力4星技能评价 穿甲3星技能评价,默认硬芯穿甲弹,硬芯 风帽 爆破,风帽高爆硬芯弹,风帽高爆外壳硬芯穿甲弹,ZiS-S-53式85mm坦克炮塔,43式88mm反坦克炮塔,SA式100mm炮塔,,,,,,,风帽高爆硬芯弹(大口径),硬芯 风帽 爆破,2,导弹_大口径风帽高爆硬芯弹科技,3,4,科技点,2375,科技素材1型,46,研发图谱4阶,7,银币,16000,硬芯弹,main_gun/icon_tech_main_gun_apcr_24.png
2210,小口径被帽风帽硬芯弹科技,火力,515,穿甲,330,命中,45,硬芯 风帽 钝头转正 火力3星技能评价 穿甲4星技能评价,默认硬芯穿甲弹,硬芯 风帽 钝头转正,被帽风帽硬芯弹,被帽风帽硬芯穿甲弹,20mm穿甲炮塔,35/36式37mm反坦克炮塔,39式50mm坦克炮塔,38式50mm坦克炮塔,,,,,,被帽风帽硬芯弹(小口径),硬芯 风帽 钝头转正,2,导弹_小口径被帽风帽硬芯弹科技,1,6,科技点,4090,科技素材1型,77,研发图谱4阶,9,银币,17500,硬芯弹,main_gun/icon_tech_main_gun_apcr_25.png
2211,中口径被帽风帽硬芯弹科技,火力,630,穿甲,310,命中,45,硬芯 风帽 钝头转正 火力3星技能评价 穿甲4星技能评价,默认硬芯穿甲弹,硬芯 风帽 钝头转正,被帽风帽硬芯弹,被帽风帽硬芯穿甲弹,F-34式76.2mm坦克炮塔,39式75mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,被帽风帽硬芯弹(中口径),硬芯 风帽 钝头转正,2,导弹_中口径被帽风帽硬芯弹科技,2,5,科技点,3115,科技素材1型,60,研发图谱4阶,8,银币,17500,硬芯弹,main_gun/icon_tech_main_gun_apcr_26.png
2212,大口径被帽风帽硬芯弹科技,火力,750,穿甲,295,命中,45,硬芯 风帽 钝头转正 火力3星技能评价 穿甲4星技能评价,默认硬芯穿甲弹,硬芯 风帽 钝头转正,被帽风帽硬芯弹,被帽风帽硬芯穿甲弹,ZIS-6式107mm坦克炮塔,苏D式122mm坦克炮塔,SA式120mm炮塔,DCA式90mm炮塔,,,,,,被帽风帽硬芯弹(大口径),硬芯 风帽 钝头转正,2,导弹_大口径被帽风帽硬芯弹科技,3,5,科技点,3115,科技素材1型,60,研发图谱4阶,8,银币,17500,硬芯弹,main_gun/icon_tech_main_gun_apcr_27.png
2301,中口径被帽风帽曳光硬芯弹科技,火力,795,穿甲,390,命中,45,硬芯 风帽 指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向硬芯穿甲弹,硬芯 风帽 指向 钝头转正,被风帽曳光硬芯弹,被帽风帽曳光硬芯穿甲弹,39式75mm坦克炮塔,42式75mm坦克炮塔,,,,,,,,被帽风帽曳光硬芯弹(中口径),硬芯 风帽 指向 钝头转正,3,导弹_中口径被帽风帽曳光硬芯弹科技,2,1,科技点,6440,科技素材1型,148,研发图谱5阶,9,银币,18500,硬芯弹,main_gun/icon_tech_main_gun_apcr_28.png
2302,大口径被帽风帽曳光硬芯弹科技,火力,945,穿甲,365,命中,45,硬芯 风帽 指向 钝头转正 火力3星技能评价 穿甲4星技能评价,指向硬芯穿甲弹,硬芯 风帽 指向 钝头转正,被风帽曳光硬芯弹,被帽风帽曳光硬芯穿甲弹,44式128mm反坦克炮塔,苏D式122mm坦克炮塔,SA式100mm炮塔,,,,,,,被帽风帽曳光硬芯弹(大口径),硬芯 风帽 指向 钝头转正,3,导弹_大口径被帽风帽曳光硬芯弹科技,3,1,科技点,6440,科技素材1型,148,研发图谱5阶,9,银币,18500,硬芯弹,main_gun/icon_tech_main_gun_apcr_29.png
2303,小口径被帽风帽速射硬芯弹科技,火力,915,穿甲,385,命中,50,硬芯 风帽 速射弹夹 钝头转正 火力3星技能评价 穿甲4星技能评价,速射硬芯穿甲弹,硬芯 风帽 速射弹夹 钝头转正,被风帽速射硬芯弹,速射弹夹被帽风帽硬芯穿甲弹,20mm穿甲炮塔,35/36式37mm反坦克炮塔,39式50mm坦克炮塔,38式50mm坦克炮塔,,,,,,被帽风帽速射硬芯弹(小口径),硬芯 风帽 速射弹夹 钝头转正,3,导弹_小口径被帽风帽速射硬芯弹科技,1,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,硬芯弹,main_gun/icon_tech_main_gun_apcr_30.png
2304,小口径被帽风帽碳化硬芯弹科技,火力,305,穿甲,575,命中,50,硬芯 风帽 硬脆处理 钝头转正 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 风帽 硬脆处理 钝头转正,被风帽碳化硬芯弹,被帽风帽碳化内芯硬芯穿甲弹,20mm穿甲炮塔,苏M式45mm炮塔,ZiS式57mm坦克炮塔,,,,,,,被帽风帽碳化硬芯弹(小口径),硬芯 风帽 硬脆处理 钝头转正,3,导弹_小口径被帽风帽碳化硬芯弹科技,1,3,科技点,8760,科技素材1型,238,研发图谱5阶,11,银币,21500,硬芯弹,main_gun/icon_tech_main_gun_apcr_31.png
2305,中口径被帽风帽碳化硬芯弹科技,火力,440,穿甲,555,命中,50,硬芯 风帽 硬脆处理 钝头转正 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 风帽 硬脆处理 钝头转正,被风帽碳化硬芯弹,被帽风帽碳化内芯硬芯穿甲弹,F-34式76.2mm坦克炮塔,39式75mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,被帽风帽碳化硬芯弹(中口径),硬芯 风帽 硬脆处理 钝头转正,3,导弹_中口径被帽风帽碳化硬芯弹科技,2,3,科技点,8760,科技素材1型,238,研发图谱5阶,11,银币,21500,硬芯弹,main_gun/icon_tech_main_gun_apcr_32.png
2306,大口径被帽风帽碳化硬芯弹科技,火力,580,穿甲,530,命中,50,硬芯 风帽 硬脆处理 钝头转正 火力2星技能评价 穿甲5星技能评价,硬质硬芯穿甲弹,硬芯 风帽 硬脆处理 钝头转正,被风帽碳化硬芯弹,被帽风帽碳化内芯硬芯穿甲弹,ZiS-S-53式85mm坦克炮塔,36式88mm坦克炮塔,ZIS-6式107mm坦克炮塔,DCA式90mm炮塔,,,,,,被帽风帽碳化硬芯弹(大口径),硬芯 风帽 硬脆处理 钝头转正,3,导弹_大口径被帽风帽碳化硬芯弹科技,3,3,科技点,8760,科技素材1型,238,研发图谱5阶,11,银币,21500,硬芯弹,main_gun/icon_tech_main_gun_apcr_33.png
2307,大口径被帽风帽高爆硬芯弹科技,火力,1685,穿甲,215,命中,55,硬芯 风帽 爆破 钝头转正 火力4星技能评价 穿甲3星技能评价,默认硬芯穿甲弹,硬芯 风帽 爆破 钝头转正,被风帽高爆硬芯弹,被帽风帽高爆外壳硬芯穿甲弹,ZiS-S-53式85mm坦克炮塔,43式88mm反坦克炮塔,150mm步兵炮塔,SA式100mm炮塔,,,,,,被帽风帽高爆硬芯弹(大口径),硬芯 风帽 爆破 钝头转正,3,导弹_大口径被帽风帽高爆硬芯弹科技,3,4,科技点,10630,科技素材1型,300,研发图谱6阶,11,银币,22500,硬芯弹,main_gun/icon_tech_main_gun_apcr_34.png
2308,小口径被帽风帽韧质硬芯弹科技,火力,920,穿甲,430,命中,55,硬芯 风帽 韧质处理 钝头转正 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 风帽 韧质处理 钝头转正,被风帽韧质硬芯弹,被帽风帽高韧质内芯硬芯穿甲弹,38式37mm坦克炮塔,39式50mm坦克炮塔,ZiS式57mm坦克炮塔,,,,,,,被帽风帽韧质硬芯弹(小口径),硬芯 风帽 韧质处理 钝头转正,3,导弹_小口径被帽风帽韧质硬芯弹科技,1,6,科技点,15985,科技素材1型,474,研发图谱6阶,13,银币,24000,硬芯弹,main_gun/icon_tech_main_gun_apcr_35.png
2309,中口径被帽风帽韧质硬芯弹科技,火力,1095,穿甲,405,命中,55,硬芯 风帽 韧质处理 钝头转正 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 风帽 韧质处理 钝头转正,被风帽韧质硬芯弹,被帽风帽高韧质内芯硬芯穿甲弹,42式75mm坦克炮塔,F-34式76.2mm坦克炮塔,36式76.2mm反坦克炮塔,,,,,,,被帽风帽韧质硬芯弹(中口径),硬芯 风帽 韧质处理 钝头转正,3,导弹_中口径被帽风帽韧质硬芯弹科技,2,5,科技点,13015,科技素材1型,377,研发图谱6阶,12,银币,24000,硬芯弹,main_gun/icon_tech_main_gun_apcr_36.png
2310,大口径被帽风帽韧质硬芯弹科技,火力,1275,穿甲,375,命中,55,硬芯 风帽 韧质处理 钝头转正 火力3星技能评价 穿甲4星技能评价,韧质硬芯穿甲弹,硬芯 风帽 韧质处理 钝头转正,被风帽韧质硬芯弹,被帽风帽高韧质内芯硬芯穿甲弹,ZIS-6式107mm坦克炮塔,苏D式122mm坦克炮塔,SA式120mm炮塔,,,,,,,被帽风帽韧质硬芯弹(大口径),硬芯 风帽 韧质处理 钝头转正,3,导弹_大口径被帽风帽韧质硬芯弹科技,3,5,科技点,13015,科技素材1型,377,研发图谱6阶,12,银币,24000,硬芯弹,main_gun/icon_tech_main_gun_apcr_37.png
3101,小口径高旋转脱壳穿甲弹科技,火力,120,穿甲,80,命中,10,脱壳 稳定动能 火力3星技能评价 穿甲5星技能评价,旋转脱壳穿甲弹,脱壳 稳定动能,高旋转脱壳穿甲弹,旋转稳定脱壳穿甲弹,40mm速射2磅炮塔,苏M式37mm炮塔,苏30mm自动炮塔,,,,,,,高旋转脱壳穿甲弹(小口径),脱壳 稳定动能,1,导弹_小口径高旋转脱壳穿甲弹科技,1,1,科技点,30,科技素材1型,1,研发图谱1阶,1,银币,500,脱壳弹,main_gun/icon_tech_main_gun_apds_01.png
3102,小口径尾翼稳定脱壳穿甲弹科技,火力,115,穿甲,100,命中,15,脱壳 尾翼 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼,尾翼脱壳穿甲弹,尾翼稳定脱壳穿甲弹,57mm速射6磅炮塔,,,,,,,,,尾翼稳定脱壳穿甲弹(小口径),脱壳 尾翼,1,导弹_小口径尾翼稳定脱壳穿甲弹科技,1,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,脱壳弹,main_gun/icon_tech_main_gun_apds_02.png
3103,中口径尾翼稳定脱壳穿甲弹科技,火力,140,穿甲,100,命中,15,脱壳 尾翼 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼,尾翼脱壳穿甲弹,尾翼稳定脱壳穿甲弹,美M式75mm炮塔,76.2mm减重17磅炮塔,法SA式75mm炮塔,,,,,,,尾翼稳定脱壳穿甲弹(中口径),脱壳 尾翼,1,导弹_中口径尾翼稳定脱壳穿甲弹科技,2,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,脱壳弹,main_gun/icon_tech_main_gun_apds_03.png
3104,大口径尾翼稳定脱壳穿甲弹科技,火力,170,穿甲,90,命中,15,脱壳 尾翼 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼,尾翼脱壳穿甲弹,尾翼稳定脱壳穿甲弹,Tc式85mm坦克炮,美T式90mm战车炮塔,79式105mm线膛炮塔,美T式105mm坦克炮塔,,,,,,尾翼稳定脱壳穿甲弹(大口径),脱壳 尾翼,1,导弹_大口径尾翼稳定脱壳穿甲弹科技,3,2,科技点,65,科技素材1型,2,研发图谱1阶,2,银币,2500,脱壳弹,main_gun/icon_tech_main_gun_apds_04.png
3105,大口径超重弹芯脱壳穿甲弹科技,火力,315,穿甲,85,,,脱壳 重弹芯 火力3星技能评价 穿甲4星技能评价,默认脱壳穿甲弹,脱壳 重弹芯,重芯脱壳穿甲弹,超重弹芯脱壳穿甲弹,法CN式105mm炮塔,苏M式130mm加农炮,79式105mm线膛炮塔,SA式100mm炮塔,,,,,,超重弹芯脱壳穿甲弹(大口径),脱壳 重弹芯,1,导弹_大口径超重弹芯脱壳穿甲弹科技,1,3,科技点,125,科技素材1型,4,研发图谱1阶,3,银币,4000,脱壳弹,main_gun/icon_tech_main_gun_apds_05.png
3106,小口径韧质处理脱壳穿甲弹科技,火力,200,穿甲,125,,,脱壳 韧质处理 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 韧质处理,韧质脱壳穿甲弹,高韧质处理脱壳穿甲弹,苏M式37mm炮塔,ZiS式57mm坦克炮塔,苏30mm自动炮塔,,,,,,,韧质处理脱壳穿甲弹(小口径),脱壳 韧质处理,1,导弹_小口径韧质处理脱壳穿甲弹科技,1,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,5500,脱壳弹,main_gun/icon_tech_main_gun_apds_06.png
3107,中口径韧质处理脱壳穿甲弹科技,火力,240,穿甲,120,,,脱壳 韧质处理 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 韧质处理,韧质脱壳穿甲弹,高韧质处理脱壳穿甲弹,40式75mm反坦克炮塔,美M式75mm炮塔,法SA式75mm炮塔,,,,,,,韧质处理脱壳穿甲弹(中口径),脱壳 韧质处理,1,导弹_中口径韧质处理脱壳穿甲弹科技,2,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,5500,脱壳弹,main_gun/icon_tech_main_gun_apds_07.png
3108,大口径韧质处理脱壳穿甲弹科技,火力,280,穿甲,110,,,脱壳 韧质处理 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 韧质处理,韧质脱壳穿甲弹,高韧质处理脱壳穿甲弹,短CN式105mm炮塔,Tc式85mm坦克炮,美T式105mm坦克炮塔,美M式90mm炮塔,,,,,,韧质处理脱壳穿甲弹(大口径),脱壳 韧质处理,1,导弹_大口径韧质处理脱壳穿甲弹科技,3,4,科技点,220,科技素材1型,6,研发图谱2阶,3,银币,5500,脱壳弹,main_gun/icon_tech_main_gun_apds_08.png
3109,中口径轻质外壳脱壳穿甲弹科技,火力,200,穿甲,160,闪避,25,脱壳 轻弹壳 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 轻弹壳,轻壳脱壳穿甲弹,轻质外壳脱壳穿甲弹,美M7式76.2mm炮塔,84mm速射20磅炮塔,,,,,,,,轻质外壳脱壳穿甲弹(中口径),脱壳 轻弹壳,1,导弹_中口径轻质外壳脱壳穿甲弹科技,1,5,科技点,380,科技素材1型,9,研发图谱2阶,4,银币,7500,脱壳弹,main_gun/icon_tech_main_gun_apds_09.png
3110,大口径轻质外壳脱壳穿甲弹科技,火力,245,穿甲,150,闪避,25,脱壳 轻弹壳 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 轻弹壳,轻壳脱壳穿甲弹,轻质外壳脱壳穿甲弹,短CN式105mm炮塔,美T式90mm战车炮塔,SA式100mm炮塔,美M式90mm炮塔,,,,,,轻质外壳脱壳穿甲弹(大口径),脱壳 轻弹壳,1,导弹_大口径轻质外壳脱壳穿甲弹科技,2,5,科技点,380,科技素材1型,9,研发图谱2阶,4,银币,7500,脱壳弹,main_gun/icon_tech_main_gun_apds_10.png
3111,小口径碳化弹芯脱壳穿甲弹科技,火力,80,穿甲,215,,,脱壳 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 硬脆处理,碳化脱壳穿甲弹,碳化弹芯脱壳穿甲弹,57mm速射6磅炮塔,ZiS式57mm坦克炮塔,,,,,,,,碳化弹芯脱壳穿甲弹(小口径),脱壳 硬脆处理,1,导弹_小口径碳化弹芯脱壳穿甲弹科技,1,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,脱壳弹,main_gun/icon_tech_main_gun_apds_11.png
3112,中口径碳化弹芯脱壳穿甲弹科技,火力,125,穿甲,210,,,脱壳 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 硬脆处理,碳化脱壳穿甲弹,碳化弹芯脱壳穿甲弹,76.2mm野战速射17磅炮塔,84mm速射20磅炮塔,75mm野战速射炮塔,,,,,,,碳化弹芯脱壳穿甲弹(中口径),脱壳 硬脆处理,1,导弹_中口径碳化弹芯脱壳穿甲弹科技,2,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,脱壳弹,main_gun/icon_tech_main_gun_apds_12.png
3113,大口径碳化弹芯脱壳穿甲弹科技,火力,170,穿甲,200,,,脱壳 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 硬脆处理,碳化脱壳穿甲弹,碳化弹芯脱壳穿甲弹,Tc式85mm坦克炮,法CN式105mm炮塔,美T式105mm坦克炮塔,,,,,,,碳化弹芯脱壳穿甲弹(大口径),脱壳 硬脆处理,1,导弹_大口径碳化弹芯脱壳穿甲弹科技,3,6,科技点,650,科技素材1型,12,研发图谱2阶,5,银币,9000,脱壳弹,main_gun/icon_tech_main_gun_apds_13.png
3201,小口径长杆式高旋转脱壳弹科技,火力,425,穿甲,245,命中,40,脱壳 稳定动能 火力3星技能评价 穿甲5星技能评价,旋转脱壳穿甲弹,脱壳 稳定动能,高旋转长杆脱壳弹,次口径旋转稳定竿式脱壳穿甲弹,40mm速射2磅炮塔,苏M式37mm炮塔,苏30mm自动炮塔,,,,,,,长杆式高旋转脱壳弹(小口径),脱壳 稳定动能,2,导弹_小口径长杆式高旋转脱壳弹科技,1,1,科技点,1145,科技素材1型,20,研发图谱3阶,5,银币,10500,脱壳弹,main_gun/icon_tech_main_gun_apds_14.png
3202,小口径长杆式尾翼脱壳弹科技,火力,350,穿甲,280,命中,50,脱壳 尾翼 杆式帽体 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 杆式帽体,尾翼长杆脱壳弹,次口径尾翼稳定竿式脱壳穿甲弹,57mm速射6磅炮塔,,,,,,,,,长杆式尾翼脱壳弹(小口径),脱壳 尾翼 杆式帽体,2,导弹_小口径长杆式尾翼脱壳弹科技,1,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,11500,脱壳弹,main_gun/icon_tech_main_gun_apds_15.png
3203,中口径长杆式尾翼脱壳弹科技,火力,435,穿甲,265,命中,50,脱壳 尾翼 杆式帽体 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 杆式帽体,尾翼长杆脱壳弹,次口径尾翼稳定竿式脱壳穿甲弹,美M式75mm炮塔,76.2mm减重17磅炮塔,法SA式75mm炮塔,,,,,,,长杆式尾翼脱壳弹(中口径),脱壳 尾翼 杆式帽体,2,导弹_中口径长杆式尾翼脱壳弹科技,2,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,11500,脱壳弹,main_gun/icon_tech_main_gun_apds_16.png
3204,大口径长杆式尾翼脱壳弹科技,火力,520,穿甲,255,命中,50,脱壳 尾翼 杆式帽体 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 杆式帽体,尾翼长杆脱壳弹,次口径尾翼稳定竿式脱壳穿甲弹,Tc式85mm坦克炮,美T式90mm战车炮塔,79式105mm线膛炮塔,美T式105mm坦克炮塔,,,,,,长杆式尾翼脱壳弹(大口径),脱壳 尾翼 杆式帽体,2,导弹_大口径长杆式尾翼脱壳弹科技,3,2,科技点,1415,科技素材1型,27,研发图谱3阶,6,银币,11500,脱壳弹,main_gun/icon_tech_main_gun_apds_17.png
3205,大口径尾翼超重脱壳弹科技,火力,845,穿甲,210,命中,30,脱壳 尾翼 重弹芯 火力3星技能评价 穿甲4星技能评价,默认脱壳穿甲弹,脱壳 尾翼 重弹芯,尾翼超重脱壳弹,尾翼稳定超重弹芯脱壳穿甲弹,法CN式105mm炮塔,苏M式130mm加农炮,79式105mm线膛炮塔,SA式100mm炮塔,,,,,,尾翼超重脱壳弹(大口径),脱壳 尾翼 重弹芯,2,导弹_大口径尾翼超重脱壳弹科技,1,3,科技点,1820,科技素材1型,35,研发图谱3阶,7,银币,13000,脱壳弹,main_gun/icon_tech_main_gun_apds_18.png
3206,小口径尾翼韧质脱壳弹科技,火力,485,穿甲,290,命中,35,脱壳 尾翼 韧质处理 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 尾翼 韧质处理,尾翼韧质脱壳弹,尾翼稳定高韧质处理脱壳穿甲弹,苏M式37mm炮塔,ZiS式57mm坦克炮塔,苏30mm自动炮塔,,,,,,,尾翼韧质脱壳弹(小口径),脱壳 尾翼 韧质处理,2,导弹_小口径尾翼韧质脱壳弹科技,1,4,科技点,2375,科技素材1型,46,研发图谱4阶,7,银币,14500,脱壳弹,main_gun/icon_tech_main_gun_apds_19.png
3207,中口径尾翼韧质脱壳弹科技,火力,585,穿甲,270,命中,35,脱壳 尾翼 韧质处理 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 尾翼 韧质处理,尾翼韧质脱壳弹,尾翼稳定高韧质处理脱壳穿甲弹,40式75mm反坦克炮塔,美M式75mm炮塔,法SA式75mm炮塔,,,,,,,尾翼韧质脱壳弹(中口径),脱壳 尾翼 韧质处理,2,导弹_中口径尾翼韧质脱壳弹科技,2,4,科技点,2375,科技素材1型,46,研发图谱4阶,7,银币,14500,脱壳弹,main_gun/icon_tech_main_gun_apds_20.png
3208,大口径尾翼韧质脱壳弹科技,火力,690,穿甲,255,命中,35,脱壳 尾翼 韧质处理 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 尾翼 韧质处理,尾翼韧质脱壳弹,尾翼稳定高韧质处理脱壳穿甲弹,短CN式105mm炮塔,Tc式85mm坦克炮,94mm速射32磅炮塔,美T式105mm坦克炮塔,美M式90mm炮塔,,,,,尾翼韧质脱壳弹(大口径),脱壳 尾翼 韧质处理,2,导弹_大口径尾翼韧质脱壳弹科技,3,4,科技点,2375,科技素材1型,46,研发图谱4阶,7,银币,14500,脱壳弹,main_gun/icon_tech_main_gun_apds_21.png
3209,中口径轻质外壳尾翼脱壳弹科技,火力,455,穿甲,340,闪避,50,脱壳 尾翼 轻弹壳 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 轻弹壳,尾翼轻壳脱壳弹,尾翼稳定轻质外壳脱壳穿甲弹,美M7式76.2mm炮塔,CN式75mm炮塔,84mm速射20磅炮塔,,,,,,,轻质外壳尾翼脱壳弹(中口径),脱壳 尾翼 轻弹壳,2,导弹_中口径轻质外壳尾翼脱壳弹科技,2,5,科技点,3115,科技素材1型,60,研发图谱4阶,8,银币,16000,脱壳弹,main_gun/icon_tech_main_gun_apds_22.png
3210,大口径轻质外壳尾翼脱壳弹科技,火力,560,穿甲,320,闪避,50,脱壳 尾翼 轻弹壳 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 轻弹壳,尾翼轻壳脱壳弹,尾翼稳定轻质外壳脱壳穿甲弹,短CN式105mm炮塔,美T式90mm战车炮塔,SA式100mm炮塔,美M式90mm炮塔,,,,,,轻质外壳尾翼脱壳弹(大口径),脱壳 尾翼 轻弹壳,2,导弹_大口径轻质外壳尾翼脱壳弹科技,3,5,科技点,3115,科技素材1型,60,研发图谱4阶,8,银币,16000,脱壳弹,main_gun/icon_tech_main_gun_apds_23.png
3211,小口径尾翼碳化脱壳弹科技,火力,175,穿甲,440,命中,40,脱壳 尾翼 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 尾翼 硬脆处理,尾翼碳化脱壳弹,尾翼稳定碳化弹芯脱壳穿甲弹,57mm速射6磅炮塔,ZiS式57mm坦克炮塔,,,,,,,,尾翼碳化脱壳弹(小口径),脱壳 尾翼 硬脆处理,2,导弹_小口径尾翼碳化脱壳弹科技,1,6,科技点,4090,科技素材1型,77,研发图谱4阶,9,银币,17500,脱壳弹,main_gun/icon_tech_main_gun_apds_24.png
3212,中口径尾翼碳化脱壳弹科技,火力,265,穿甲,425,命中,40,脱壳 尾翼 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 尾翼 硬脆处理,尾翼碳化脱壳弹,尾翼稳定碳化弹芯脱壳穿甲弹,76.2mm野战速射17磅炮塔,84mm速射20磅炮塔,75mm野战速射炮塔,,,,,,,尾翼碳化脱壳弹(中口径),脱壳 尾翼 硬脆处理,2,导弹_中口径尾翼碳化脱壳弹科技,2,6,科技点,4090,科技素材1型,77,研发图谱4阶,9,银币,17500,脱壳弹,main_gun/icon_tech_main_gun_apds_25.png
3213,大口径尾翼碳化脱壳弹科技,火力,360,穿甲,410,命中,40,脱壳 尾翼 硬脆处理 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 尾翼 硬脆处理,尾翼碳化脱壳弹,尾翼稳定碳化弹芯脱壳穿甲弹,Tc式85mm坦克炮,法CN式105mm炮塔,94mm速射32磅炮塔,美T式105mm坦克炮塔,,,,,,尾翼碳化脱壳弹(大口径),脱壳 尾翼 硬脆处理,2,导弹_大口径尾翼碳化脱壳弹科技,3,6,科技点,4090,科技素材1型,77,研发图谱4阶,9,银币,17500,脱壳弹,main_gun/icon_tech_main_gun_apds_26.png
3301,大口径尾翼超重长杆弹科技,火力,1275,穿甲,310,命中,45,脱壳 尾翼 重弹芯 杆式帽体 火力3星技能评价 穿甲4星技能评价,默认脱壳穿甲弹,脱壳 尾翼 重弹芯 杆式帽体,尾翼超重长杆弹,次口径尾翼稳定杆式超重弹芯脱壳穿甲弹,法CN式105mm炮塔,苏M式130mm加农炮,79式105mm线膛炮塔,SA式100mm炮塔,,,,,,尾翼超重长杆弹(大口径),脱壳 尾翼 重弹芯 杆式帽体,3,导弹_大口径尾翼超重长杆弹科技,3,1,科技点,6440,科技素材1型,148,研发图谱5阶,9,银币,18500,脱壳弹,main_gun/icon_tech_main_gun_apds_27.png
3302,小口径尾翼韧质长杆弹科技,火力,715,穿甲,415,命中,50,脱壳 尾翼 韧质处理 杆式帽体 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 尾翼 韧质处理 杆式帽体,尾翼韧质长杆弹,次口径尾翼稳定杆式高韧质处理脱壳穿甲弹,苏M式37mm炮塔,ZiS式57mm坦克炮塔,苏30mm自动炮塔,,,,,,,尾翼韧质长杆弹(小口径),脱壳 尾翼 韧质处理 杆式帽体,3,导弹_小口径尾翼韧质长杆弹科技,1,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,脱壳弹,main_gun/icon_tech_main_gun_apds_28.png
3303,中口径尾翼韧质长杆弹科技,火力,865,穿甲,395,命中,50,脱壳 尾翼 韧质处理 杆式帽体 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 尾翼 韧质处理 杆式帽体,尾翼韧质长杆弹,次口径尾翼稳定杆式高韧质处理脱壳穿甲弹,40式75mm反坦克炮塔,美M式75mm炮塔,法SA式75mm炮塔,,,,,,,尾翼韧质长杆弹(中口径),脱壳 尾翼 韧质处理 杆式帽体,3,导弹_中口径尾翼韧质长杆弹科技,2,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,脱壳弹,main_gun/icon_tech_main_gun_apds_29.png
3304,大口径尾翼韧质长杆弹科技,火力,1020,穿甲,370,命中,50,脱壳 尾翼 韧质处理 杆式帽体 火力3星技能评价 穿甲5星技能评价,韧质脱壳穿甲弹,脱壳 尾翼 韧质处理 杆式帽体,尾翼韧质长杆弹,次口径尾翼稳定杆式高韧质处理脱壳穿甲弹,短CN式105mm炮塔,Tc式85mm坦克炮,94mm速射32磅炮塔,美T式105mm坦克炮塔,美M式90mm炮塔,,,,,尾翼韧质长杆弹(大口径),脱壳 尾翼 韧质处理 杆式帽体,3,导弹_大口径尾翼韧质长杆弹科技,3,2,科技点,7370,科技素材1型,188,研发图谱5阶,10,银币,20000,脱壳弹,main_gun/icon_tech_main_gun_apds_30.png
3305,小口径速射弹夹长杆弹科技,火力,935,穿甲,490,,,脱壳 速射弹夹 杆式帽体 火力3星技能评价 穿甲5星技能评价,速射脱壳穿甲弹,脱壳 速射弹夹 杆式帽体,速射弹夹长杆弹,次口径速射弹夹杆式脱壳穿甲弹,40mm速射2磅炮塔,苏M式37mm炮塔,苏30mm自动炮塔,,,,,,,速射弹夹长杆弹(小口径),脱壳 速射弹夹 杆式帽体,3,导弹_小口径速射弹夹长杆弹科技,1,3,科技点,8760,科技素材1型,238,研发图谱5阶,11,银币,21500,脱壳弹,main_gun/icon_tech_main_gun_apds_31.png
3306,小口径尾翼碳化长杆弹科技,火力,255,穿甲,615,命中,55,脱壳 尾翼 硬脆处理 杆式帽体 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 尾翼 硬脆处理 杆式帽体,尾翼碳化长杆弹,次口径尾翼稳定杆式碳化弹芯脱壳穿甲弹,57mm速射6磅炮塔,ZiS式57mm坦克炮塔,,,,,,,,尾翼碳化长杆弹(小口径),脱壳 尾翼 硬脆处理 杆式帽体,3,导弹_小口径尾翼碳化长杆弹科技,1,4,科技点,10630,科技素材1型,300,研发图谱6阶,11,银币,22500,脱壳弹,main_gun/icon_tech_main_gun_apds_32.png
3307,中口径尾翼碳化长杆弹科技,火力,375,穿甲,595,命中,55,脱壳 尾翼 硬脆处理 杆式帽体 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 尾翼 硬脆处理 杆式帽体,尾翼碳化长杆弹,次口径尾翼稳定杆式碳化弹芯脱壳穿甲弹,76.2mm野战速射17磅炮塔,84mm速射20磅炮塔,75mm野战速射炮塔,,,,,,,尾翼碳化长杆弹(中口径),脱壳 尾翼 硬脆处理 杆式帽体,3,导弹_中口径尾翼碳化长杆弹科技,2,4,科技点,10630,科技素材1型,300,研发图谱6阶,11,银币,22500,脱壳弹,main_gun/icon_tech_main_gun_apds_33.png
3308,大口径尾翼碳化长杆弹科技,火力,510,穿甲,575,命中,55,脱壳 尾翼 硬脆处理 杆式帽体 火力2星技能评价 穿甲5星技能评价,硬质脱壳穿甲弹,脱壳 尾翼 硬脆处理 杆式帽体,尾翼碳化长杆弹,次口径尾翼稳定杆式碳化弹芯脱壳穿甲弹,Tc式85mm坦克炮,法CN式105mm炮塔,94mm速射32磅炮塔,美T式105mm坦克炮塔,,,,,,尾翼碳化长杆弹(大口径),脱壳 尾翼 硬脆处理 杆式帽体,3,导弹_大口径尾翼碳化长杆弹科技,3,4,科技点,10630,科技素材1型,300,研发图谱6阶,11,银币,22500,脱壳弹,main_gun/icon_tech_main_gun_apds_34.png
3309,中口径轻质外壳尾翼长杆弹科技,火力,710,穿甲,520,闪避,75,脱壳 尾翼 轻弹壳 杆式帽体 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 轻弹壳 杆式帽体,尾翼轻壳长杆弹,次口径尾翼稳定轻质外壳杆式脱壳穿甲弹,美M7式76.2mm炮塔,CN式75mm炮塔,84mm速射20磅炮塔,,,,,,,轻质外壳尾翼长杆弹(中口径),脱壳 尾翼 轻弹壳 杆式帽体,3,导弹_中口径轻质外壳尾翼长杆弹科技,2,5,科技点,13015,科技素材1型,377,研发图谱6阶,12,银币,24000,脱壳弹,main_gun/icon_tech_main_gun_apds_35.png
3310,大口径轻质外壳尾翼长杆弹科技,火力,870,穿甲,495,闪避,75,脱壳 尾翼 轻弹壳 杆式帽体 火力2星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 轻弹壳 杆式帽体,尾翼轻壳长杆弹,次口径尾翼稳定轻质外壳杆式脱壳穿甲弹,短CN式105mm炮塔,美T式90mm战车炮塔,SA式100mm炮塔,美M式90mm炮塔,,,,,,轻质外壳尾翼长杆弹(大口径),脱壳 尾翼 轻弹壳 杆式帽体,3,导弹_大口径轻质外壳尾翼长杆弹科技,3,5,科技点,13015,科技素材1型,377,研发图谱6阶,12,银币,24000,脱壳弹,main_gun/icon_tech_main_gun_apds_36.png
3311,小口径超长竿式尾翼脱壳弹,火力,195,穿甲,755,命中,95,脱壳 尾翼 超长杆体 杆式帽体 火力1星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 超长杆体 杆式帽体,尾翼超长竿弹,次口径尾翼稳定超长杆式内芯脱壳穿甲弹,57mm速射6磅炮塔,ZiS式57mm坦克炮塔,苏30mm自动炮塔,,,,,,,超长竿式尾翼脱壳弹(小口径),脱壳 尾翼 超长杆体 杆式帽体,3,导弹_小口径超长竿式尾翼脱壳弹,1,6,科技点,15985,科技素材1型,474,研发图谱6阶,13,银币,25000,脱壳弹,main_gun/icon_tech_main_gun_apds_37.png
3312,中口径超长竿式尾翼脱壳弹,火力,320,穿甲,730,命中,95,脱壳 尾翼 超长杆体 杆式帽体 火力1星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 超长杆体 杆式帽体,尾翼超长竿弹,次口径尾翼稳定超长杆式内芯脱壳穿甲弹,美M式75mm炮塔,76.2mm减重17磅炮塔,84mm速射20磅炮塔,法SA式75mm炮塔,,,,,,超长竿式尾翼脱壳弹(中口径),脱壳 尾翼 超长杆体 杆式帽体,3,导弹_中口径超长竿式尾翼脱壳弹,2,6,科技点,15985,科技素材1型,474,研发图谱6阶,13,银币,25000,脱壳弹,main_gun/icon_tech_main_gun_apds_38.png
3313,大口径超长竿式尾翼脱壳弹,火力,460,穿甲,710,命中,95,脱壳 尾翼 超长杆体 杆式帽体 火力1星技能评价 穿甲5星技能评价,默认脱壳穿甲弹,脱壳 尾翼 超长杆体 杆式帽体,尾翼超长竿弹,次口径尾翼稳定超长杆式内芯脱壳穿甲弹,Tc式85mm坦克炮,美T式90mm战车炮塔,79式105mm线膛炮塔,美T式105mm坦克炮塔,,,,,,超长竿式尾翼脱壳弹(大口径),脱壳 尾翼 超长杆体 杆式帽体,3,导弹_大口径超长竿式尾翼脱壳弹,3,6,科技点,15985,科技素材1型,474,研发图谱6阶,13,银币,25000,脱壳弹,main_gun/icon_tech_main_gun_apds_39.png
4101,小口径杀伤榴弹科技,火力,295,穿甲,10,,,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,杀伤榴弹,杀伤榴弹,17.1倍75mm炮塔,35/36式37mm坦克炮塔,37式75mm坦克炮塔,40式75mm坦克炮塔,美M式81mm迫击炮塔,75mm野战速射炮塔,,,,杀伤榴弹(小口径),炸裂 杀伤,1,导弹_小口径杀伤榴弹科技,1,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,榴弹,main_gun/icon_tech_main_gun_he_01.png
4102,中口径杀伤榴弹科技,火力,310,穿甲,5,,,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,杀伤榴弹,杀伤榴弹,克虏伯105mm炮塔,美M式90mm炮塔,苏D式122mm榴弹炮塔,59式100mm线膛炮塔,,,,,,杀伤榴弹(中口径),炸裂 杀伤,1,导弹_中口径杀伤榴弹科技,2,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,榴弹,main_gun/icon_tech_main_gun_he_02.png
4103,大口径杀伤榴弹科技,火力,330,穿甲,5,,,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,杀伤榴弹,杀伤榴弹,18式150mm野战榴弹炮塔,K72式170mm榴弹炮塔,苏M式152mm榴弹炮塔,290mm攻城臼炮炮塔,德305mm迫击炮塔,,,,,杀伤榴弹(大口径),炸裂 杀伤,1,导弹_大口径杀伤榴弹科技,3,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,榴弹,main_gun/icon_tech_main_gun_he_03.png
4104,小口径高旋转榴弹科技,火力,235,穿甲,60,命中,30,炸裂 自旋稳定 火力4星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 自旋稳定,高旋转榴弹,旋转稳定榴弹,3英寸野战速射榴弹炮塔,SA式47mm炮塔,美M式81mm迫击炮塔,苏30mm自动炮塔,75mm野战速射炮塔,,,,,高旋转榴弹(小口径),炸裂 自旋稳定,1,导弹_小口径高旋转榴弹科技,1,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,榴弹,main_gun/icon_tech_main_gun_he_04.png
4105,中口径高旋转榴弹科技,火力,265,穿甲,55,命中,30,炸裂 自旋稳定 火力4星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 自旋稳定,高旋转榴弹,旋转稳定榴弹,3.7英寸榴弹炮塔,苏BS式100mm炮塔,25磅榴弹炮塔,94mm速射32磅炮塔,5.5英寸榴弹炮塔,,,,,高旋转榴弹(中口径),炸裂 自旋稳定,1,导弹_中口径高旋转榴弹科技,2,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,榴弹,main_gun/icon_tech_main_gun_he_05.png
4106,中口径爆破榴弹科技,火力,260,穿甲,85,,,炸裂 重爆 火力4星技能评价 穿甲4星技能评价,爆破榴弹,炸裂 重爆,爆破榴弹,爆破榴弹,苏M式130mm加农炮,3.7英寸榴弹炮塔,美M式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,,爆破榴弹(中口径),炸裂 重爆,1,导弹_中口径爆破榴弹科技,2,3,科技点,125,科技素材2型,4,研发图谱1阶,3,银币,4000,榴弹,main_gun/icon_tech_main_gun_he_06.png
4107,大口径爆破榴弹科技,火力,300,穿甲,75,,,炸裂 重爆 火力4星技能评价 穿甲4星技能评价,爆破榴弹,炸裂 重爆,爆破榴弹,爆破榴弹,150mm步兵炮塔,美M式155mm加农炮塔,290mm攻城臼炮炮塔,德210mm迫击炮塔,苏180mm加农炮塔,,,,,爆破榴弹(大口径),炸裂 重爆,1,导弹_大口径爆破榴弹科技,3,3,科技点,125,科技素材2型,4,研发图谱1阶,3,银币,4000,榴弹,main_gun/icon_tech_main_gun_he_07.png
4108,小口径燃烧榴弹科技,火力,380,穿甲,60,,,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,燃烧榴弹,燃烧榴弹,SA式47mm炮塔,37式75mm突击炮塔,40式75mm突击炮塔,美M式81mm迫击炮塔,苏30mm自动炮塔,,,,,燃烧榴弹(小口径),炸裂 燃烧,1,导弹_小口径燃烧榴弹科技,1,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,榴弹,main_gun/icon_tech_main_gun_he_08.png
4109,中口径燃烧榴弹科技,火力,420,穿甲,55,,,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,燃烧榴弹,燃烧榴弹,leFH式105mm榴弹炮塔,苏D式122mm榴弹炮塔,美T式90mm战车炮塔,42式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,燃烧榴弹(中口径),炸裂 燃烧,1,导弹_中口径燃烧榴弹科技,2,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,榴弹,main_gun/icon_tech_main_gun_he_09.png
4110,大口径燃烧榴弹科技,火力,455,穿甲,50,,,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,燃烧榴弹,燃烧榴弹,美M式203mm加农炮塔,苏M式152mm榴弹炮塔,380mm火箭臼炮炮塔,43式150mm突击炮塔,,,,,,燃烧榴弹(大口径),炸裂 燃烧,1,导弹_大口径燃烧榴弹科技,3,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,榴弹,main_gun/icon_tech_main_gun_he_10.png
4111,小口径枣核低阻榴弹科技,火力,450,穿甲,65,隐蔽,10,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,枣核低阻榴弹,枣核型低阻增程榴弹,37式75mm坦克炮塔,40式75mm坦克炮塔,苏M式76.2mm炮塔,美M式81mm迫击炮塔,36式76.2mm反坦克炮塔,,,,,枣核低阻榴弹(小口径),炸裂 增程,1,导弹_小口径枣核低阻榴弹科技,1,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,榴弹,main_gun/icon_tech_main_gun_he_11.png
4112,中口径枣核低阻榴弹科技,火力,495,穿甲,60,隐蔽,10,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,枣核低阻榴弹,枣核型低阻增程榴弹,43式88mm反坦克炮塔,ZIS-6式107mm坦克炮塔,25磅榴弹炮塔,94mm速射32磅炮塔,美M式105mm榴弹炮塔,,,,,枣核低阻榴弹(中口径),炸裂 增程,1,导弹_中口径枣核低阻榴弹科技,2,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,榴弹,main_gun/icon_tech_main_gun_he_12.png
4113,大口径枣核低阻榴弹科技,火力,535,穿甲,50,隐蔽,10,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,枣核低阻榴弹,枣核型低阻增程榴弹,150mm步兵炮塔,美M式203mm加农炮塔,K72式170mm榴弹炮塔,380mm火箭臼炮炮塔,苏180mm加农炮塔,43式150mm突击炮塔,,,,枣核低阻榴弹(大口径),炸裂 增程,1,导弹_大口径枣核低阻榴弹科技,3,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,榴弹,main_gun/icon_tech_main_gun_he_13.png
4114,小口径底凹榴弹科技,火力,460,穿甲,90,命中,40,炸裂 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂,底凹榴弹,底凹型榴弹,17.1倍75mm炮塔,40式75mm反坦克炮塔,3英寸野战速射榴弹炮塔,37式75mm坦克炮塔,,,,,,底凹榴弹(小口径),炸裂,1,导弹_小口径底凹榴弹科技,1,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,9000,榴弹,main_gun/icon_tech_main_gun_he_14.png
4115,中口径底凹榴弹科技,火力,510,穿甲,80,命中,40,炸裂 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂,底凹榴弹,底凹型榴弹,36式88mm坦克炮塔,leFH式105mm榴弹炮塔,克虏伯105mm炮塔,59式100mm线膛炮塔,42式105mm榴弹炮塔,,,,,底凹榴弹(中口径),炸裂,1,导弹_中口径底凹榴弹科技,2,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,9000,榴弹,main_gun/icon_tech_main_gun_he_15.png
4116,大口径底凹榴弹科技,火力,560,穿甲,70,命中,40,炸裂 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂,底凹榴弹,底凹型榴弹,德210mm迫击炮塔,德305mm迫击炮塔,美M式155mm加农炮塔,18式150mm野战榴弹炮塔,苏180mm加农炮塔,,,,,底凹榴弹(大口径),炸裂,1,导弹_大口径底凹榴弹科技,3,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,9000,榴弹,main_gun/icon_tech_main_gun_he_16.png
4201,小口径底凹钢珠杀伤榴弹科技,火力,1040,穿甲,35,命中,60,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,底凹钢珠杀伤榴弹,底凹型钢珠弹壁杀伤榴弹,17.1倍75mm炮塔,35/36式37mm坦克炮塔,37式75mm坦克炮塔,40式75mm坦克炮塔,美M式81mm迫击炮塔,75mm野战速射炮塔,,,,底凹钢珠杀伤榴弹(小口径),炸裂 杀伤,2,导弹_小口径底凹钢珠杀伤榴弹科技,1,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,榴弹,main_gun/icon_tech_main_gun_he_17.png
4202,中口径底凹钢珠杀伤榴弹科技,火力,1105,穿甲,25,命中,60,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,底凹钢珠杀伤榴弹,底凹型钢珠弹壁杀伤榴弹,克虏伯105mm炮塔,美M式90mm炮塔,苏D式122mm榴弹炮塔,59式100mm线膛炮塔,,,,,,底凹钢珠杀伤榴弹(中口径),炸裂 杀伤,2,导弹_中口径底凹钢珠杀伤榴弹科技,2,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,榴弹,main_gun/icon_tech_main_gun_he_18.png
4203,大口径底凹钢珠杀伤榴弹科技,火力,1165,穿甲,15,命中,60,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,底凹钢珠杀伤榴弹,底凹型钢珠弹壁杀伤榴弹,18式150mm野战榴弹炮塔,K72式170mm榴弹炮塔,苏M式152mm榴弹炮塔,290mm攻城臼炮炮塔,德305mm迫击炮塔,,,,,底凹钢珠杀伤榴弹(大口径),炸裂 杀伤,2,导弹_大口径底凹钢珠杀伤榴弹科技,3,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,榴弹,main_gun/icon_tech_main_gun_he_19.png
4204,小口径底凹曳光榴弹科技,火力,770,穿甲,145,命中,65,炸裂 指向 火力5星技能评价 穿甲3星技能评价,指向榴弹,炸裂 指向,底凹曳光榴弹,底凹型曳光榴弹,3英寸野战速射榴弹炮塔,SA式47mm炮塔,F-34式76.2mm坦克炮塔,CN式75mm炮塔,美M式81mm迫击炮塔,,,,,底凹曳光榴弹(小口径),炸裂 指向,2,导弹_小口径底凹曳光榴弹科技,1,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,榴弹,main_gun/icon_tech_main_gun_he_20.png
4205,中口径底凹曳光榴弹科技,火力,855,穿甲,130,命中,65,炸裂 指向 火力5星技能评价 穿甲3星技能评价,指向榴弹,炸裂 指向,底凹曳光榴弹,底凹型曳光榴弹,3.7英寸榴弹炮塔,苏BS式100mm炮塔,25磅榴弹炮塔,36式88mm坦克炮塔,94mm速射32磅炮塔,,,,,底凹曳光榴弹(中口径),炸裂 指向,2,导弹_中口径底凹曳光榴弹科技,2,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,榴弹,main_gun/icon_tech_main_gun_he_21.png
4206,中口径底凹爆破榴弹科技,火力,705,穿甲,205,命中,70,炸裂 重爆 火力4星技能评价 穿甲4星技能评价,爆破榴弹,炸裂 重爆,底凹爆破榴弹,底凹型爆破榴弹,苏M式130mm加农炮,3.7英寸榴弹炮塔,美M式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,,底凹爆破榴弹(中口径),炸裂 重爆,2,导弹_中口径底凹爆破榴弹科技,2,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,13000,榴弹,main_gun/icon_tech_main_gun_he_22.png
4207,大口径底凹爆破榴弹科技,火力,805,穿甲,190,命中,70,炸裂 重爆 火力4星技能评价 穿甲4星技能评价,爆破榴弹,炸裂 重爆,底凹爆破榴弹,底凹型爆破榴弹,150mm步兵炮塔,美M式155mm加农炮塔,290mm攻城臼炮炮塔,德210mm迫击炮塔,苏180mm加农炮塔,,,,,底凹爆破榴弹(大口径),炸裂 重爆,2,导弹_大口径底凹爆破榴弹科技,3,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,13000,榴弹,main_gun/icon_tech_main_gun_he_23.png
4208,小口径底凹燃烧榴弹科技,火力,935,穿甲,145,命中,75,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,底凹燃烧榴弹,底凹型燃烧榴弹,SA式47mm炮塔,37式75mm突击炮塔,40式75mm突击炮塔,美M式81mm迫击炮塔,苏30mm自动炮塔,,,,,底凹燃烧榴弹(小口径),炸裂 燃烧,2,导弹_小口径底凹燃烧榴弹科技,1,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,榴弹,main_gun/icon_tech_main_gun_he_24.png
4209,中口径底凹燃烧榴弹科技,火力,1025,穿甲,130,命中,75,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,底凹燃烧榴弹,底凹型燃烧榴弹,leFH式105mm榴弹炮塔,苏D式122mm榴弹炮塔,美T式90mm战车炮塔,42式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,底凹燃烧榴弹(中口径),炸裂 燃烧,2,导弹_中口径底凹燃烧榴弹科技,2,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,榴弹,main_gun/icon_tech_main_gun_he_25.png
4210,大口径底凹燃烧榴弹科技,火力,1115,穿甲,115,命中,75,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,底凹燃烧榴弹,底凹型燃烧榴弹,美M式203mm加农炮塔,苏M式152mm榴弹炮塔,380mm火箭臼炮炮塔,43式150mm突击炮塔,,,,,,底凹燃烧榴弹(大口径),炸裂 燃烧,2,导弹_大口径底凹燃烧榴弹科技,3,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,榴弹,main_gun/icon_tech_main_gun_he_26.png
4211,小口径底排增程榴弹科技,火力,1020,穿甲,140,隐蔽,20,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,底排增程榴弹,底排增程榴弹,37式75mm坦克炮塔,40式75mm坦克炮塔,苏M式76.2mm炮塔,美M式81mm迫击炮塔,36式76.2mm反坦克炮塔,,,,,底排增程榴弹(小口径),炸裂 增程,2,导弹_小口径底排增程榴弹科技,1,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,榴弹,main_gun/icon_tech_main_gun_he_27.png
4212,中口径底排增程榴弹科技,火力,1115,穿甲,125,隐蔽,20,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,底排增程榴弹,底排增程榴弹,43式88mm反坦克炮塔,ZIS-6式107mm坦克炮塔,25磅榴弹炮塔,94mm速射32磅炮塔,美M式105mm榴弹炮塔,,,,,底排增程榴弹(中口径),炸裂 增程,2,导弹_中口径底排增程榴弹科技,2,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,榴弹,main_gun/icon_tech_main_gun_he_28.png
4213,大口径底排增程榴弹科技,火力,1210,穿甲,110,隐蔽,20,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,底排增程榴弹,底排增程榴弹,150mm步兵炮塔,美M式203mm加农炮塔,K72式170mm榴弹炮塔,380mm火箭臼炮炮塔,苏180mm加农炮塔,,,,,底排增程榴弹(大口径),炸裂 增程,2,导弹_大口径底排增程榴弹科技,3,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,榴弹,main_gun/icon_tech_main_gun_he_29.png
4214,小口径含能破片榴弹科技,火力,975,穿甲,180,命中,15,炸裂 含能破片 火力5星技能评价 穿甲3星技能评价,含能破片榴弹,炸裂 含能破片,含能破片榴弹,含能破片激发强化榴弹,17.1倍75mm炮塔,40式75mm反坦克炮塔,3英寸野战速射榴弹炮塔,37式75mm坦克炮塔,美M式75mm炮塔,法SA式75mm炮塔,,,,含能破片榴弹(小口径),炸裂 含能破片,2,导弹_小口径含能破片榴弹科技,1,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,榴弹,main_gun/icon_tech_main_gun_he_30.png
4215,中口径含能破片榴弹科技,火力,1085,穿甲,165,命中,15,炸裂 含能破片 火力5星技能评价 穿甲3星技能评价,含能破片榴弹,炸裂 含能破片,含能破片榴弹,含能破片激发强化榴弹,36式88mm坦克炮塔,leFH式105mm榴弹炮塔,克虏伯105mm炮塔,苏D式122mm榴弹炮塔,59式100mm线膛炮塔,42式105mm榴弹炮塔,,,,含能破片榴弹(中口径),炸裂 含能破片,2,导弹_中口径含能破片榴弹科技,2,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,榴弹,main_gun/icon_tech_main_gun_he_31.png
4216,大口径含能破片榴弹科技,火力,1185,穿甲,145,命中,15,炸裂 含能破片 火力5星技能评价 穿甲3星技能评价,含能破片榴弹,炸裂 含能破片,含能破片榴弹,含能破片激发强化榴弹,德210mm迫击炮塔,德305mm迫击炮塔,美M式155mm加农炮塔,18式150mm野战榴弹炮塔,苏180mm加农炮塔,,,,,含能破片榴弹(大口径),炸裂 含能破片,2,导弹_大口径含能破片榴弹科技,3,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,榴弹,main_gun/icon_tech_main_gun_he_32.png
4301,小口径底凹纵火燃烧弹科技,火力,1320,穿甲,200,命中,100,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,底凹纵火燃烧弹,底凹型超强纵火剂燃烧榴弹,SA式47mm炮塔,37式75mm突击炮塔,40式75mm突击炮塔,美M式81mm迫击炮塔,苏30mm自动炮塔,,,,,底凹纵火燃烧弹(小口径),炸裂 燃烧,3,导弹_小口径底凹纵火燃烧弹科技,1,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,榴弹,main_gun/icon_tech_main_gun_he_33.png
4302,中口径底凹纵火燃烧弹科技,火力,1450,穿甲,180,命中,100,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,底凹纵火燃烧弹,底凹型超强纵火剂燃烧榴弹,leFH式105mm榴弹炮塔,苏D式122mm榴弹炮塔,美T式90mm战车炮塔,42式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,底凹纵火燃烧弹(中口径),炸裂 燃烧,3,导弹_中口径底凹纵火燃烧弹科技,2,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,榴弹,main_gun/icon_tech_main_gun_he_34.png
4303,大口径底凹纵火燃烧弹科技,火力,1575,穿甲,160,命中,100,炸裂 燃烧 火力5星技能评价 穿甲3星技能评价,默认榴弹炮,炸裂 燃烧,底凹纵火燃烧弹,底凹型超强纵火剂燃烧榴弹,美M式203mm加农炮塔,苏M式152mm榴弹炮塔,380mm火箭臼炮炮塔,43式150mm突击炮塔,,,,,,底凹纵火燃烧弹(大口径),炸裂 燃烧,3,导弹_大口径底凹纵火燃烧弹科技,3,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,榴弹,main_gun/icon_tech_main_gun_he_35.png
4304,小口径底凹长弹体曳光榴弹科技,火力,1285,穿甲,240,命中,105,炸裂 指向 火力5星技能评价 穿甲3星技能评价,指向榴弹,炸裂 指向,底凹长弹体曳光榴弹,底凹型长弹体装药强化曳光榴弹,3英寸野战速射榴弹炮塔,SA式47mm炮塔,F-34式76.2mm坦克炮塔,CN式75mm炮塔,美M式81mm迫击炮塔,,,,,底凹长弹体曳光榴弹(小口径),炸裂 指向,3,导弹_小口径底凹长弹体曳光榴弹科技,1,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,榴弹,main_gun/icon_tech_main_gun_he_36.png
4305,中口径底凹长弹体曳光榴弹科技,火力,1425,穿甲,215,命中,105,炸裂 指向 火力5星技能评价 穿甲3星技能评价,指向榴弹,炸裂 指向,底凹长弹体曳光榴弹,底凹型长弹体装药强化曳光榴弹,3.7英寸榴弹炮塔,苏BS式100mm炮塔,25磅榴弹炮塔,36式88mm坦克炮塔,94mm速射32磅炮塔,,,,,底凹长弹体曳光榴弹(中口径),炸裂 指向,3,导弹_中口径底凹长弹体曳光榴弹科技,2,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,榴弹,main_gun/icon_tech_main_gun_he_37.png
4306,小口径底排火箭增程榴弹科技,火力,1475,穿甲,205,隐蔽,30,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,底排火箭增程榴弹,底排-火箭增程远程榴弹,37式75mm坦克炮塔,40式75mm坦克炮塔,苏M式76.2mm炮塔,美M式81mm迫击炮塔,36式76.2mm反坦克炮塔,,,,,底排火箭增程榴弹(小口径),炸裂 增程,3,导弹_小口径底排火箭增程榴弹科技,1,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,榴弹,main_gun/icon_tech_main_gun_he_38.png
4307,中口径底排火箭增程榴弹科技,火力,1615,穿甲,180,隐蔽,30,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,底排火箭增程榴弹,底排-火箭增程远程榴弹,43式88mm反坦克炮塔,ZIS-6式107mm坦克炮塔,25磅榴弹炮塔,94mm速射32磅炮塔,美M式105mm榴弹炮塔,,,,,底排火箭增程榴弹(中口径),炸裂 增程,3,导弹_中口径底排火箭增程榴弹科技,2,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,榴弹,main_gun/icon_tech_main_gun_he_39.png
4308,大口径底排火箭增程榴弹科技,火力,1750,穿甲,160,隐蔽,30,炸裂 增程 火力5星技能评价 穿甲2星技能评价,增程榴弹,炸裂 增程,底排火箭增程榴弹,底排-火箭增程远程榴弹,150mm步兵炮塔,美M式203mm加农炮塔,K72式170mm榴弹炮塔,380mm火箭臼炮炮塔,苏180mm加农炮塔,,,,,底排火箭增程榴弹(大口径),炸裂 增程,3,导弹_大口径底排火箭增程榴弹科技,3,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,榴弹,main_gun/icon_tech_main_gun_he_40.png
4309,小口径底凹钨球杀伤榴弹科技,火力,2005,穿甲,65,命中,110,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,底凹钨球杀伤榴弹,底凹型钨球弹壁杀伤榴弹,17.1倍75mm炮塔,35/36式37mm坦克炮塔,37式75mm坦克炮塔,40式75mm坦克炮塔,美M式81mm迫击炮塔,75mm野战速射炮塔,,,,底凹钨球杀伤榴弹(小口径),炸裂 杀伤,3,导弹_小口径底凹钨球杀伤榴弹科技,1,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,榴弹,main_gun/icon_tech_main_gun_he_41.png
4310,中口径底凹钨球杀伤榴弹科技,火力,2135,穿甲,50,命中,110,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,底凹钨球杀伤榴弹,底凹型钨球弹壁杀伤榴弹,克虏伯105mm炮塔,美M式90mm炮塔,苏D式122mm榴弹炮塔,59式100mm线膛炮塔,,,,,,底凹钨球杀伤榴弹(中口径),炸裂 杀伤,3,导弹_中口径底凹钨球杀伤榴弹科技,2,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,榴弹,main_gun/icon_tech_main_gun_he_42.png
4311,大口径底凹钨球杀伤榴弹科技,火力,2255,穿甲,35,命中,110,炸裂 杀伤 火力5星技能评价 穿甲1星技能评价,默认榴弹炮,炸裂 杀伤,底凹钨球杀伤榴弹,底凹型钨球弹壁杀伤榴弹,18式150mm野战榴弹炮塔,K72式170mm榴弹炮塔,苏M式152mm榴弹炮塔,290mm攻城臼炮炮塔,德305mm迫击炮塔,,,,,底凹钨球杀伤榴弹(大口径),炸裂 杀伤,3,导弹_大口径底凹钨球杀伤榴弹科技,3,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,榴弹,main_gun/icon_tech_main_gun_he_43.png
4312,中口径底凹长弹体爆破榴弹科技,火力,1240,穿甲,355,命中,115,炸裂 重爆 火力4星技能评价 穿甲4星技能评价,爆破榴弹,炸裂 重爆,底凹长弹体爆破榴弹,底凹型长弹体装药强化爆破榴弹,苏M式130mm加农炮,3.7英寸榴弹炮塔,美M式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,,底凹长弹体爆破榴弹(中口径),炸裂 重爆,3,导弹_中口径底凹长弹体爆破榴弹科技,2,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,榴弹,main_gun/icon_tech_main_gun_he_44.png
4313,大口径底凹长弹体爆破榴弹科技,火力,1410,穿甲,330,命中,115,炸裂 重爆 火力4星技能评价 穿甲4星技能评价,爆破榴弹,炸裂 重爆,底凹长弹体爆破榴弹,底凹型长弹体装药强化爆破榴弹,150mm步兵炮塔,美M式155mm加农炮塔,290mm攻城臼炮炮塔,德210mm迫击炮塔,苏180mm加农炮塔,380mm火箭臼炮炮塔,,,,底凹长弹体爆破榴弹(大口径),炸裂 重爆,3,导弹_大口径底凹长弹体爆破榴弹科技,3,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,榴弹,main_gun/icon_tech_main_gun_he_45.png
4314,小口径高活性含能破片榴弹科技,火力,1490,穿甲,275,命中,20,炸裂 含能破片 火力5星技能评价 穿甲3星技能评价,含能破片榴弹,炸裂 含能破片,高活性含能破片榴弹,高活性含能破片激发强化榴弹,17.1倍75mm炮塔,40式75mm反坦克炮塔,3英寸野战速射榴弹炮塔,37式75mm坦克炮塔,美M式75mm炮塔,法SA式75mm炮塔,,,,高活性含能破片榴弹(小口径),炸裂 含能破片,3,导弹_小口径高活性含能破片榴弹科技,1,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,榴弹,main_gun/icon_tech_main_gun_he_46.png
4315,中口径高活性含能破片榴弹科技,火力,1655,穿甲,250,命中,20,炸裂 含能破片 火力5星技能评价 穿甲3星技能评价,含能破片榴弹,炸裂 含能破片,高活性含能破片榴弹,高活性含能破片激发强化榴弹,36式88mm坦克炮塔,leFH式105mm榴弹炮塔,克虏伯105mm炮塔,苏D式122mm榴弹炮塔,59式100mm线膛炮塔,42式105mm榴弹炮塔,,,,高活性含能破片榴弹(中口径),炸裂 含能破片,3,导弹_中口径高活性含能破片榴弹科技,2,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,榴弹,main_gun/icon_tech_main_gun_he_47.png
4316,大口径高活性含能破片榴弹科技,火力,1810,穿甲,225,命中,20,炸裂 含能破片 火力5星技能评价 穿甲3星技能评价,含能破片榴弹,炸裂 含能破片,高活性含能破片榴弹,高活性含能破片激发强化榴弹,德210mm迫击炮塔,德305mm迫击炮塔,美M式155mm加农炮塔,18式150mm野战榴弹炮塔,苏180mm加农炮塔,380mm火箭臼炮炮塔,,,,高活性含能破片榴弹(大口径),炸裂 含能破片,3,导弹_大口径高活性含能破片榴弹科技,3,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,榴弹,main_gun/icon_tech_main_gun_he_48.png
5101,中口径杀伤型火箭弹科技,火力,320,穿甲,5,,,联射 杀伤 火力6星技能评价 穿甲1星技能评价,默认火箭炮,联射 杀伤,杀伤型火箭弹,杀伤型火箭弹,多管风琴114mm火箭炮塔,喀秋莎M13火箭炮塔,43式150mm突击炮塔,,,,,,,杀伤型火箭弹(中口径),联射 杀伤,1,导弹_中口径杀伤型火箭弹科技,2,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,火箭弹,main_gun/icon_tech_main_gun_rp_01.png
5102,大口径杀伤型火箭弹科技,火力,340,穿甲,0,,,联射 杀伤 火力6星技能评价 穿甲1星技能评价,默认火箭炮,联射 杀伤,杀伤型火箭弹,杀伤型火箭弹,280mm火箭炮塔,380mm火箭臼炮炮塔,,,,,,,,杀伤型火箭弹(大口径),联射 杀伤,1,导弹_大口径杀伤型火箭弹科技,3,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,火箭弹,main_gun/icon_tech_main_gun_rp_02.png
5103,中口径燃烧火箭弹科技,火力,300,穿甲,40,,,联射 燃烧 火力5星技能评价 穿甲3星技能评价,默认火箭炮,联射 燃烧,燃烧火箭弹,燃烧型火箭弹,多管风琴114mm火箭炮塔,喀秋莎M8火箭炮塔,喀秋莎M13火箭炮塔,,,,,,,燃烧火箭弹(中口径),联射 燃烧,1,导弹_中口径燃烧火箭弹科技,2,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,火箭弹,main_gun/icon_tech_main_gun_rp_03.png
5104,大口径燃烧火箭弹科技,火力,325,穿甲,35,,,联射 燃烧 火力5星技能评价 穿甲3星技能评价,默认火箭炮,联射 燃烧,燃烧火箭弹,燃烧型火箭弹,280mm火箭炮塔,喀秋莎M31火箭炮塔,,,,,,,,燃烧火箭弹(大口径),联射 燃烧,1,导弹_大口径燃烧火箭弹科技,3,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,火箭弹,main_gun/icon_tech_main_gun_rp_04.png
5105,大口径爆破型火箭弹科技,火力,275,穿甲,85,,,联射 重爆 火力4星技能评价 穿甲4星技能评价,爆破型火箭弹,联射 重爆,爆破型火箭弹,爆破型火箭弹,380mm火箭臼炮炮塔,喀秋莎M31火箭炮塔,,,,,,,,爆破型火箭弹(大口径),联射 重爆,1,导弹_大口径爆破型火箭弹科技,3,3,科技点,125,科技素材2型,4,研发图谱1阶,3,银币,4000,火箭弹,main_gun/icon_tech_main_gun_rp_05.png
5106,中口径曳光火箭弹科技,火力,370,穿甲,75,,,联射 指向 火力4星技能评价 穿甲3星技能评价,指向火箭弹,联射 指向,曳光火箭弹,曳光火箭弹,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,43式150mm突击炮塔,,,,,,,曳光火箭弹(中口径),联射 指向,1,导弹_中口径曳光火箭弹科技,2,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,火箭弹,main_gun/icon_tech_main_gun_rp_06.png
5107,中口径破甲型火箭弹科技,火力,380,穿甲,100,,,联射 镕温 火力4星技能评价 穿甲3星技能评价,破甲型火箭弹,联射 镕温,破甲型火箭弹,破甲型火箭弹,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,喀秋莎M13火箭炮塔,,,,,,,破甲型火箭弹(中口径),联射 镕温,1,导弹_中口径破甲型火箭弹科技,2,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,火箭弹,main_gun/icon_tech_main_gun_rp_07.png
5108,大口径破甲型火箭弹科技,火力,425,穿甲,90,,,联射 镕温 火力4星技能评价 穿甲3星技能评价,破甲型火箭弹,联射 镕温,破甲型火箭弹,破甲型火箭弹,380mm火箭臼炮炮塔,喀秋莎M31火箭炮塔,,,,,,,,破甲型火箭弹(大口径),联射 镕温,1,导弹_大口径破甲型火箭弹科技,3,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,7500,火箭弹,main_gun/icon_tech_main_gun_rp_08.png
5201,中口径尾翼曳光火箭弹科技,火力,745,穿甲,140,命中,25,联射 尾翼 指向 火力4星技能评价 穿甲3星技能评价,指向火箭弹,联射 尾翼 指向,尾翼曳光火箭弹,尾翼稳定曳光火箭弹,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,43式150mm突击炮塔,,,,,,,尾翼曳光火箭弹(中口径),联射 尾翼 指向,2,导弹_中口径尾翼曳光火箭弹科技,2,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,火箭弹,main_gun/icon_tech_main_gun_rp_09.png
5202,中口径尾翼杀伤型火箭弹科技,火力,1210,穿甲,20,命中,25,联射 尾翼 杀伤 火力6星技能评价 穿甲1星技能评价,默认火箭炮,联射 尾翼 杀伤,尾翼杀伤型火箭弹,尾翼稳定杀伤型火箭弹,多管风琴114mm火箭炮塔,喀秋莎M13火箭炮塔,43式150mm突击炮塔,,,,,,,尾翼杀伤型火箭弹(中口径),联射 尾翼 杀伤,2,导弹_中口径尾翼杀伤型火箭弹科技,2,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,火箭弹,main_gun/icon_tech_main_gun_rp_10.png
5203,大口径尾翼杀伤型火箭弹科技,火力,1285,穿甲,10,命中,25,联射 尾翼 杀伤 火力6星技能评价 穿甲1星技能评价,默认火箭炮,联射 尾翼 杀伤,尾翼杀伤型火箭弹,尾翼稳定杀伤型火箭弹,280mm火箭炮塔,380mm火箭臼炮炮塔,,,,,,,,尾翼杀伤型火箭弹(大口径),联射 尾翼 杀伤,2,导弹_大口径尾翼杀伤型火箭弹科技,3,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,火箭弹,main_gun/icon_tech_main_gun_rp_11.png
5204,大口径尾翼爆破型火箭弹科技,火力,735,穿甲,215,命中,25,联射 尾翼 重爆 火力4星技能评价 穿甲4星技能评价,爆破型火箭弹,联射 尾翼 重爆,尾翼爆破型火箭弹,尾翼稳定爆破型火箭弹,380mm火箭臼炮炮塔,喀秋莎M31火箭炮塔,,,,,,,,尾翼爆破型火箭弹(大口径),联射 尾翼 重爆,2,导弹_大口径尾翼爆破型火箭弹科技,3,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,13000,火箭弹,main_gun/icon_tech_main_gun_rp_12.png
5205,中口径尾翼燃烧火箭弹科技,火力,1025,穿甲,130,命中,30,联射 尾翼 燃烧 火力5星技能评价 穿甲3星技能评价,默认火箭炮,联射 尾翼 燃烧,尾翼燃烧火箭弹,尾翼稳定燃烧型火箭弹,多管风琴114mm火箭炮塔,喀秋莎M8火箭炮塔,喀秋莎M13火箭炮塔,,,,,,,尾翼燃烧火箭弹(中口径),联射 尾翼 燃烧,2,导弹_中口径尾翼燃烧火箭弹科技,2,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,火箭弹,main_gun/icon_tech_main_gun_rp_13.png
5206,大口径尾翼燃烧火箭弹科技,火力,1120,穿甲,115,命中,30,联射 尾翼 燃烧 火力5星技能评价 穿甲3星技能评价,默认火箭炮,联射 尾翼 燃烧,尾翼燃烧火箭弹,尾翼稳定燃烧型火箭弹,280mm火箭炮塔,喀秋莎M31火箭炮塔,,,,,,,,尾翼燃烧火箭弹(大口径),联射 尾翼 燃烧,2,导弹_大口径尾翼燃烧火箭弹科技,3,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,火箭弹,main_gun/icon_tech_main_gun_rp_14.png
5207,中口径多联装火箭弹科技,火力,955,穿甲,180,,,多联装 火力4星技能评价 穿甲3星技能评价,多联装火箭弹,多联装,多联装火箭弹,多联装连射型火箭弹,多管风琴114mm火箭炮塔,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,,,,,,,多联装火箭弹(中口径),多联装,2,导弹_中口径多联装火箭弹科技,2,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,火箭弹,main_gun/icon_tech_main_gun_rp_15.png
5208,中口径尾翼破甲型火箭弹科技,火力,905,穿甲,225,命中,30,联射 尾翼 镕温 火力4星技能评价 穿甲3星技能评价,破甲型火箭弹,联射 尾翼 镕温,尾翼破甲型火箭弹,尾翼稳定破甲型火箭弹,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,喀秋莎M13火箭炮塔,,,,,,,尾翼破甲型火箭弹(中口径),联射 尾翼 镕温,2,导弹_中口径尾翼破甲型火箭弹科技,2,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,火箭弹,main_gun/icon_tech_main_gun_rp_16.png
5209,大口径尾翼破甲型火箭弹科技,火力,1015,穿甲,205,命中,30,联射 尾翼 镕温 火力4星技能评价 穿甲3星技能评价,破甲型火箭弹,联射 尾翼 镕温,尾翼破甲型火箭弹,尾翼稳定破甲型火箭弹,280mm火箭炮塔,380mm火箭臼炮炮塔,喀秋莎M31火箭炮塔,,,,,,,尾翼破甲型火箭弹(大口径),联射 尾翼 镕温,2,导弹_大口径尾翼破甲型火箭弹科技,3,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,火箭弹,main_gun/icon_tech_main_gun_rp_17.png
5301,中口径涡轮曳光火箭弹科技,火力,1275,穿甲,240,命中,60,联射 涡轮 指向 火力4星技能评价 穿甲3星技能评价,指向火箭弹,联射 涡轮 指向,涡轮曳光火箭弹,涡轮式曳光火箭弹,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,43式150mm突击炮塔,,,,,,,涡轮曳光火箭弹(中口径),联射 涡轮 指向,3,导弹_中口径涡轮曳光火箭弹科技,2,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,火箭弹,main_gun/icon_tech_main_gun_rp_18.png
5302,中口径涡轮燃烧火箭弹科技,火力,1510,穿甲,190,命中,60,联射 涡轮 燃烧 火力5星技能评价 穿甲3星技能评价,默认火箭炮,联射 涡轮 燃烧,涡轮燃烧火箭弹,涡轮式燃烧型火箭弹,多管风琴114mm火箭炮塔,喀秋莎M8火箭炮塔,喀秋莎M13火箭炮塔,,,,,,,涡轮燃烧火箭弹(中口径),联射 涡轮 燃烧,3,导弹_中口径涡轮燃烧火箭弹科技,2,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,火箭弹,main_gun/icon_tech_main_gun_rp_19.png
5303,大口径涡轮燃烧火箭弹科技,火力,1650,穿甲,165,命中,60,联射 涡轮 燃烧 火力5星技能评价 穿甲3星技能评价,默认火箭炮,联射 涡轮 燃烧,涡轮燃烧火箭弹,涡轮式燃烧型火箭弹,280mm火箭炮塔,喀秋莎M31火箭炮塔,,,,,,,,涡轮燃烧火箭弹(大口径),联射 涡轮 燃烧,3,导弹_大口径涡轮燃烧火箭弹科技,3,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,火箭弹,main_gun/icon_tech_main_gun_rp_20.png
5304,大口径涡轮爆破型火箭弹科技,火力,1195,穿甲,345,命中,65,联射 涡轮 重爆 火力4星技能评价 穿甲4星技能评价,爆破型火箭弹,联射 涡轮 重爆,涡轮爆破型火箭弹,涡轮式爆破型火箭弹,380mm火箭臼炮炮塔,喀秋莎M31火箭炮塔,,,,,,,,涡轮爆破型火箭弹(大口径),联射 涡轮 重爆,3,导弹_大口径涡轮爆破型火箭弹科技,3,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,火箭弹,main_gun/icon_tech_main_gun_rp_21.png
5305,中口径涡轮杀伤型火箭弹科技,火力,2180,穿甲,40,命中,65,联射 涡轮 杀伤 火力6星技能评价 穿甲1星技能评价,默认火箭炮,联射 涡轮 杀伤,涡轮杀伤型火箭弹,涡轮式杀伤型火箭弹,多管风琴114mm火箭炮塔,喀秋莎M13火箭炮塔,43式150mm突击炮塔,,,,,,,涡轮杀伤型火箭弹(中口径),联射 涡轮 杀伤,3,导弹_中口径涡轮杀伤型火箭弹科技,2,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,火箭弹,main_gun/icon_tech_main_gun_rp_22.png
5306,大口径涡轮杀伤型火箭弹科技,火力,2320,穿甲,25,命中,65,联射 涡轮 杀伤 火力6星技能评价 穿甲1星技能评价,默认火箭炮,联射 涡轮 杀伤,涡轮杀伤型火箭弹,涡轮式杀伤型火箭弹,280mm火箭炮塔,380mm火箭臼炮炮塔,,,,,,,,涡轮杀伤型火箭弹(大口径),联射 涡轮 杀伤,3,导弹_大口径涡轮杀伤型火箭弹科技,3,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,火箭弹,main_gun/icon_tech_main_gun_rp_23.png
5307,中口径尾翼多联装火箭弹科技,火力,1490,穿甲,275,,,多联装 尾翼 火力4星技能评价 穿甲3星技能评价,多联装火箭弹,多联装 尾翼,尾翼多联装火箭弹,尾翼稳定多联装连射型火箭弹,多管风琴114mm火箭炮塔,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,,,,,,,尾翼多联装火箭弹(中口径),多联装 尾翼,3,导弹_中口径尾翼多联装火箭弹科技,2,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,火箭弹,main_gun/icon_tech_main_gun_rp_24.png
5308,中口径涡轮破甲型火箭弹科技,火力,1380,穿甲,340,命中,70,联射 涡轮 镕温 火力4星技能评价 穿甲3星技能评价,破甲型火箭弹,联射 涡轮 镕温,涡轮破甲型火箭弹,涡轮式破甲型火箭弹,刺猬式178mm火箭炮塔,喀秋莎M8火箭炮塔,喀秋莎M13火箭炮塔,,,,,,,涡轮破甲型火箭弹(中口径),联射 涡轮 镕温,3,导弹_中口径涡轮破甲型火箭弹科技,2,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,火箭弹,main_gun/icon_tech_main_gun_rp_25.png
5309,大口径涡轮破甲型火箭弹科技,火力,1555,穿甲,310,命中,70,联射 涡轮 镕温 火力4星技能评价 穿甲3星技能评价,破甲型火箭弹,联射 涡轮 镕温,涡轮破甲型火箭弹,涡轮式破甲型火箭弹,280mm火箭炮塔,380mm火箭臼炮炮塔,喀秋莎M31火箭炮塔,,,,,,,涡轮破甲型火箭弹(大口径),联射 涡轮 镕温,3,导弹_大口径涡轮破甲型火箭弹科技,3,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,火箭弹,main_gun/icon_tech_main_gun_rp_26.png
6101,小口径高爆破甲弹科技,火力,250,穿甲,25,,,镕温 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 重爆,高爆破甲弹,高爆附加型破甲弹,39式75mm反坦克炮塔,17.1倍75mm炮塔,苏M式76.2mm炮塔,,,,,,,高爆破甲弹(小口径),镕温 重爆,1,导弹_小口径高爆破甲弹科技,1,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,破甲弹,main_gun/icon_tech_main_gun_heat_01.png
6102,中口径高爆破甲弹科技,火力,275,穿甲,20,,,镕温 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 重爆,高爆破甲弹,高爆附加型破甲弹,43式88mm反坦克炮塔,苏D式122mm榴弹炮塔,79式105mm线膛炮塔,,,,,,,高爆破甲弹(中口径),镕温 重爆,1,导弹_中口径高爆破甲弹科技,2,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,破甲弹,main_gun/icon_tech_main_gun_heat_02.png
6103,大口径高爆破甲弹科技,火力,295,穿甲,15,,,镕温 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 重爆,高爆破甲弹,高爆附加型破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,,,,,,,,高爆破甲弹(大口径),镕温 重爆,1,导弹_大口径高爆破甲弹科技,3,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,破甲弹,main_gun/icon_tech_main_gun_heat_03.png
6104,中口径低阻增程破甲弹科技,火力,225,穿甲,70,隐蔽,10,镕温 增程 火力4星技能评价 穿甲4星技能评价,增程破甲弹,镕温 增程,低阻增程破甲弹,低阻增程破甲弹,36式88mm坦克炮塔,59式100mm线膛炮塔,79式105mm线膛炮塔,,,,,,,低阻增程破甲弹(中口径),镕温 增程,1,导弹_中口径低阻增程破甲弹科技,2,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,破甲弹,main_gun/icon_tech_main_gun_heat_04.png
6105,大口径低阻增程破甲弹科技,火力,255,穿甲,65,隐蔽,10,镕温 增程 火力4星技能评价 穿甲4星技能评价,增程破甲弹,镕温 增程,低阻增程破甲弹,低阻增程破甲弹,苏M式130mm加农炮,18式150mm野战榴弹炮塔,42式105mm榴弹炮塔,,,,,,,低阻增程破甲弹(大口径),镕温 增程,1,导弹_大口径低阻增程破甲弹科技,3,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,破甲弹,main_gun/icon_tech_main_gun_heat_05.png
6106,小口径旋转稳定破甲弹科技,火力,280,穿甲,70,,,镕温 稳定动能 火力4星技能评价 穿甲3星技能评价,默认破甲弹,镕温 稳定动能,旋转稳定破甲弹,旋转稳定破甲弹,SA式47mm炮塔,57mm速射6磅炮塔,法SA式75mm炮塔,,,,,,,旋转稳定破甲弹(小口径),镕温 稳定动能,1,导弹_小口径旋转稳定破甲弹科技,1,3,科技点,125,科技素材2型,4,研发图谱1阶,3,银币,4000,破甲弹,main_gun/icon_tech_main_gun_heat_06.png
6107,中口径旋转稳定破甲弹科技,火力,315,穿甲,65,,,镕温 稳定动能 火力4星技能评价 穿甲3星技能评价,默认破甲弹,镕温 稳定动能,旋转稳定破甲弹,旋转稳定破甲弹,17.1倍75mm炮塔,3.7英寸榴弹炮塔,DCA式90mm炮塔,,,,,,,旋转稳定破甲弹(中口径),镕温 稳定动能,1,导弹_中口径旋转稳定破甲弹科技,2,3,科技点,125,科技素材2型,4,研发图谱1阶,3,银币,4000,破甲弹,main_gun/icon_tech_main_gun_heat_07.png
6108,小口径曳光破甲弹科技,火力,270,穿甲,100,,,镕温 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 指向,曳光破甲弹,曳光破甲弹,SA式47mm炮塔,39式75mm反坦克炮塔,美M式76.2mm连发炮塔,法SA式75mm炮塔,,,,,,曳光破甲弹(小口径),镕温 指向,1,导弹_小口径曳光破甲弹科技,1,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,破甲弹,main_gun/icon_tech_main_gun_heat_08.png
6109,中口径曳光破甲弹科技,火力,315,穿甲,95,,,镕温 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 指向,曳光破甲弹,曳光破甲弹,短CN式105mm炮塔,美M式105mm榴弹炮塔,59式100mm线膛炮塔,,,,,,,曳光破甲弹(中口径),镕温 指向,1,导弹_中口径曳光破甲弹科技,2,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,破甲弹,main_gun/icon_tech_main_gun_heat_09.png
6110,大口径曳光破甲弹科技,火力,360,穿甲,85,,,镕温 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 指向,曳光破甲弹,曳光破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,,,,,,,,曳光破甲弹(大口径),镕温 指向,1,导弹_大口径曳光破甲弹科技,3,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,破甲弹,main_gun/icon_tech_main_gun_heat_10.png
6111,中口径爆炸成型弹丸破甲弹科技,火力,330,穿甲,135,,,镕温 杵形弹丸 火力4星技能评价 穿甲4星技能评价,爆炸成型弹丸破甲弹,镕温 杵形弹丸,爆炸成型弹丸破甲弹,爆炸成型弹丸破甲弹,3.7英寸榴弹炮塔,法CN式105mm炮塔,SA式120mm炮塔,,,,,,,爆炸成型弹丸破甲弹(中口径),镕温 杵形弹丸,1,导弹_中口径爆炸成型弹丸破甲弹科技,2,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,破甲弹,main_gun/icon_tech_main_gun_heat_11.png
6112,大口径爆炸成型弹丸破甲弹科技,火力,380,穿甲,125,,,镕温 杵形弹丸 火力4星技能评价 穿甲4星技能评价,爆炸成型弹丸破甲弹,镕温 杵形弹丸,爆炸成型弹丸破甲弹,爆炸成型弹丸破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,,,,,,,,爆炸成型弹丸破甲弹(大口径),镕温 杵形弹丸,1,导弹_大口径爆炸成型弹丸破甲弹科技,3,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,破甲弹,main_gun/icon_tech_main_gun_heat_12.png
6113,小口径深锥药罩破甲弹科技,火力,145,穿甲,195,,,镕温 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 深锥药型罩,深锥药罩破甲弹,深锥式药型罩穿深强化破甲弹,57mm速射6磅炮塔,CN式75mm炮塔,苏M式76.2mm炮塔,,,,,,,深锥药罩破甲弹(小口径),镕温 深锥药型罩,1,导弹_小口径深锥药罩破甲弹科技,1,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,9000,破甲弹,main_gun/icon_tech_main_gun_heat_13.png
6114,中口径深锥药罩破甲弹科技,火力,205,穿甲,185,,,镕温 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 深锥药型罩,深锥药罩破甲弹,深锥式药型罩穿深强化破甲弹,美M式105mm榴弹炮塔,苏D式122mm榴弹炮塔,DCA式90mm炮塔,,,,,,,深锥药罩破甲弹(中口径),镕温 深锥药型罩,1,导弹_中口径深锥药罩破甲弹科技,2,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,9000,破甲弹,main_gun/icon_tech_main_gun_heat_14.png
6115,大口径深锥药罩破甲弹科技,火力,265,穿甲,175,,,镕温 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 深锥药型罩,深锥药罩破甲弹,深锥式药型罩穿深强化破甲弹,苏M式130mm加农炮,18式150mm野战榴弹炮塔,,,,,,,,深锥药罩破甲弹(大口径),镕温 深锥药型罩,1,导弹_大口径深锥药罩破甲弹科技,3,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,9000,破甲弹,main_gun/icon_tech_main_gun_heat_15.png
6201,小口径尾翼曳光破甲弹科技,火力,545,穿甲,195,,,镕温 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 尾翼 指向,尾翼曳光破甲弹,尾翼稳定曳光破甲弹,SA式47mm炮塔,39式75mm反坦克炮塔,美M式76.2mm连发炮塔,法SA式75mm炮塔,,,,,,尾翼曳光破甲弹(小口径),镕温 尾翼 指向,2,导弹_小口径尾翼曳光破甲弹科技,1,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,破甲弹,main_gun/icon_tech_main_gun_heat_16.png
6202,中口径尾翼曳光破甲弹科技,火力,635,穿甲,180,,,镕温 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 尾翼 指向,尾翼曳光破甲弹,尾翼稳定曳光破甲弹,短CN式105mm炮塔,美M式105mm榴弹炮塔,59式100mm线膛炮塔,,,,,,,尾翼曳光破甲弹(中口径),镕温 尾翼 指向,2,导弹_中口径尾翼曳光破甲弹科技,2,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,破甲弹,main_gun/icon_tech_main_gun_heat_17.png
6203,大口径尾翼曳光破甲弹科技,火力,725,穿甲,165,,,镕温 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 尾翼 指向,尾翼曳光破甲弹,尾翼稳定曳光破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,,,,,,,,尾翼曳光破甲弹(大口径),镕温 尾翼 指向,2,导弹_大口径尾翼曳光破甲弹科技,3,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,破甲弹,main_gun/icon_tech_main_gun_heat_18.png
6204,中口径底排增程破甲弹科技,火力,680,穿甲,190,隐蔽,20,镕温 增程 火力4星技能评价 穿甲4星技能评价,增程破甲弹,镕温 增程,底排增程破甲弹,底排增程破甲弹,36式88mm坦克炮塔,59式100mm线膛炮塔,79式105mm线膛炮塔,,,,,,,底排增程破甲弹(中口径),镕温 增程,2,导弹_中口径底排增程破甲弹科技,2,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,破甲弹,main_gun/icon_tech_main_gun_heat_19.png
6205,大口径底排增程破甲弹科技,火力,775,穿甲,175,隐蔽,20,镕温 增程 火力4星技能评价 穿甲4星技能评价,增程破甲弹,镕温 增程,底排增程破甲弹,底排增程破甲弹,苏M式130mm加农炮,18式150mm野战榴弹炮塔,42式105mm榴弹炮塔,,,,,,,底排增程破甲弹(大口径),镕温 增程,2,导弹_大口径底排增程破甲弹科技,3,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,破甲弹,main_gun/icon_tech_main_gun_heat_20.png
6206,小口径尾翼高爆破甲弹科技,火力,1035,穿甲,85,,,镕温 尾翼 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 尾翼 重爆,尾翼高爆破甲弹,尾翼稳定高爆破甲弹,39式75mm反坦克炮塔,17.1倍75mm炮塔,苏M式76.2mm炮塔,,,,,,,尾翼高爆破甲弹(小口径),镕温 尾翼 重爆,2,导弹_小口径尾翼高爆破甲弹科技,1,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,13000,破甲弹,main_gun/icon_tech_main_gun_heat_21.png
6207,中口径尾翼高爆破甲弹科技,火力,1135,穿甲,70,,,镕温 尾翼 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 尾翼 重爆,尾翼高爆破甲弹,尾翼稳定高爆破甲弹,43式88mm反坦克炮塔,苏D式122mm榴弹炮塔,79式105mm线膛炮塔,,,,,,,尾翼高爆破甲弹(中口径),镕温 尾翼 重爆,2,导弹_中口径尾翼高爆破甲弹科技,2,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,13000,破甲弹,main_gun/icon_tech_main_gun_heat_22.png
6208,大口径尾翼高爆破甲弹科技,火力,1235,穿甲,55,,,镕温 尾翼 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 尾翼 重爆,尾翼高爆破甲弹,尾翼稳定高爆破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,leFH式105mm榴弹炮塔,,,,,,,尾翼高爆破甲弹(大口径),镕温 尾翼 重爆,2,导弹_大口径尾翼高爆破甲弹科技,3,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,13000,破甲弹,main_gun/icon_tech_main_gun_heat_23.png
6209,中口径爆炸成型末敏弹科技,火力,530,穿甲,290,,,镕温 杵形弹丸 火力3星技能评价 穿甲4星技能评价,爆炸成型弹丸破甲弹,镕温 杵形弹丸,爆炸成型末敏弹,爆炸成型弹丸末敏弹,3.7英寸榴弹炮塔,法CN式105mm炮塔,SA式120mm炮塔,,,,,,,爆炸成型末敏弹(中口径),镕温 杵形弹丸,2,导弹_中口径爆炸成型末敏弹科技,2,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,破甲弹,main_gun/icon_tech_main_gun_heat_24.png
6210,大口径爆炸成型末敏弹科技,火力,640,穿甲,275,,,镕温 杵形弹丸 火力3星技能评价 穿甲4星技能评价,爆炸成型弹丸破甲弹,镕温 杵形弹丸,爆炸成型末敏弹,爆炸成型弹丸末敏弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,42式105mm榴弹炮塔,,,,,,,爆炸成型末敏弹(大口径),镕温 杵形弹丸,2,导弹_大口径爆炸成型末敏弹科技,3,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,破甲弹,main_gun/icon_tech_main_gun_heat_25.png
6211,小口径串联装药破甲弹科技,火力,810,穿甲,235,,,镕温 前置干扰 分隔弹头 火力4星技能评价 穿甲3星技能评价,串联装药破甲弹,镕温 前置干扰 分隔弹头,串联装药破甲弹,串联装药式破甲弹,SA式47mm炮塔,57mm速射6磅炮塔,美M式76.2mm连发炮塔,法SA式75mm炮塔,,,,,,串联装药破甲弹(小口径),镕温 前置干扰 分隔弹头,2,导弹_小口径串联装药破甲弹科技,1,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,破甲弹,main_gun/icon_tech_main_gun_heat_26.png
6212,中口径串联装药破甲弹科技,火力,925,穿甲,215,,,镕温 前置干扰 分隔弹头 火力4星技能评价 穿甲3星技能评价,串联装药破甲弹,镕温 前置干扰 分隔弹头,串联装药破甲弹,串联装药式破甲弹,17.1倍75mm炮塔,3.7英寸榴弹炮塔,SA式120mm炮塔,DCA式90mm炮塔,,,,,,串联装药破甲弹(中口径),镕温 前置干扰 分隔弹头,2,导弹_中口径串联装药破甲弹科技,2,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,破甲弹,main_gun/icon_tech_main_gun_heat_27.png
6213,小口径尾翼深锥破甲弹科技,火力,310,穿甲,395,,,镕温 尾翼 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 尾翼 深锥药型罩,尾翼深锥破甲弹,尾翼稳定深锥式药型罩高穿深破甲弹,57mm速射6磅炮塔,CN式75mm炮塔,苏M式76.2mm炮塔,美M式76.2mm连发炮塔,,,,,,尾翼深锥破甲弹(小口径),镕温 尾翼 深锥药型罩,2,导弹_小口径尾翼深锥破甲弹科技,1,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,破甲弹,main_gun/icon_tech_main_gun_heat_28.png
6214,中口径尾翼深锥破甲弹科技,火力,435,穿甲,375,,,镕温 尾翼 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 尾翼 深锥药型罩,尾翼深锥破甲弹,尾翼稳定深锥式药型罩高穿深破甲弹,美M式105mm榴弹炮塔,苏D式122mm榴弹炮塔,克虏伯105mm炮塔,DCA式90mm炮塔,,,,,,尾翼深锥破甲弹(中口径),镕温 尾翼 深锥药型罩,2,导弹_中口径尾翼深锥破甲弹科技,2,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,破甲弹,main_gun/icon_tech_main_gun_heat_29.png
6215,大口径尾翼深锥破甲弹科技,火力,560,穿甲,355,,,镕温 尾翼 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 尾翼 深锥药型罩,尾翼深锥破甲弹,尾翼稳定深锥式药型罩高穿深破甲弹,苏M式130mm加农炮,18式150mm野战榴弹炮塔,,,,,,,,尾翼深锥破甲弹(大口径),镕温 尾翼 深锥药型罩,2,导弹_大口径尾翼深锥破甲弹科技,3,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,17500,破甲弹,main_gun/icon_tech_main_gun_heat_30.png
6301,小口径气缸尾翼曳光破甲弹科技,火力,935,穿甲,325,,,镕温 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 尾翼 指向,气缸尾翼曳光破甲弹,气缸尾翼曳光破甲弹,SA式47mm炮塔,39式75mm反坦克炮塔,美M式76.2mm连发炮塔,法SA式75mm炮塔,,,,,,气缸尾翼曳光破甲弹(小口径),镕温 尾翼 指向,3,导弹_小口径气缸尾翼曳光破甲弹科技,1,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,破甲弹,main_gun/icon_tech_main_gun_heat_31.png
6302,中口径气缸尾翼曳光破甲弹科技,火力,1090,穿甲,300,,,镕温 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 尾翼 指向,气缸尾翼曳光破甲弹,气缸尾翼曳光破甲弹,短CN式105mm炮塔,美M式105mm榴弹炮塔,59式100mm线膛炮塔,,,,,,,气缸尾翼曳光破甲弹(中口径),镕温 尾翼 指向,3,导弹_中口径气缸尾翼曳光破甲弹科技,2,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,破甲弹,main_gun/icon_tech_main_gun_heat_32.png
6303,大口径气缸尾翼曳光破甲弹科技,火力,1240,穿甲,275,,,镕温 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向破甲弹,镕温 尾翼 指向,气缸尾翼曳光破甲弹,气缸尾翼曳光破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,,,,,,,,气缸尾翼曳光破甲弹(大口径),镕温 尾翼 指向,3,导弹_大口径气缸尾翼曳光破甲弹科技,3,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,破甲弹,main_gun/icon_tech_main_gun_heat_33.png
6304,中口径火箭增程破甲弹科技,火力,1285,穿甲,310,隐蔽,30,镕温 增程 火力4星技能评价 穿甲3星技能评价,增程破甲弹,镕温 增程,火箭增程破甲弹,火箭增程破甲弹,36式88mm坦克炮塔,59式100mm线膛炮塔,79式105mm线膛炮塔,,,,,,,火箭增程破甲弹(中口径),镕温 增程,3,导弹_中口径火箭增程破甲弹科技,2,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,破甲弹,main_gun/icon_tech_main_gun_heat_34.png
6305,大口径火箭增程破甲弹科技,火力,1445,穿甲,285,隐蔽,30,镕温 增程 火力4星技能评价 穿甲3星技能评价,增程破甲弹,镕温 增程,火箭增程破甲弹,火箭增程破甲弹,苏M式130mm加农炮,18式150mm野战榴弹炮塔,42式105mm榴弹炮塔,,,,,,,火箭增程破甲弹(大口径),镕温 增程,3,导弹_大口径火箭增程破甲弹科技,3,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,破甲弹,main_gun/icon_tech_main_gun_heat_35.png
6306,小口径气缸尾翼高爆破甲弹科技,火力,1685,穿甲,140,,,镕温 尾翼 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 尾翼 重爆,气缸尾翼高爆破甲弹,气缸尾翼高爆破甲弹,39式75mm反坦克炮塔,17.1倍75mm炮塔,苏M式76.2mm炮塔,,,,,,,气缸尾翼高爆破甲弹(小口径),镕温 尾翼 重爆,3,导弹_小口径气缸尾翼高爆破甲弹科技,1,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,破甲弹,main_gun/icon_tech_main_gun_heat_36.png
6307,中口径气缸尾翼高爆破甲弹科技,火力,1850,穿甲,115,,,镕温 尾翼 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 尾翼 重爆,气缸尾翼高爆破甲弹,气缸尾翼高爆破甲弹,43式88mm反坦克炮塔,苏D式122mm榴弹炮塔,79式105mm线膛炮塔,,,,,,,气缸尾翼高爆破甲弹(中口径),镕温 尾翼 重爆,3,导弹_中口径气缸尾翼高爆破甲弹科技,2,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,破甲弹,main_gun/icon_tech_main_gun_heat_37.png
6308,大口径气缸尾翼高爆破甲弹科技,火力,2010,穿甲,90,,,镕温 尾翼 重爆 火力5星技能评价 穿甲2星技能评价,默认破甲弹,镕温 尾翼 重爆,气缸尾翼高爆破甲弹,气缸尾翼高爆破甲弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,leFH式105mm榴弹炮塔,,,,,,,气缸尾翼高爆破甲弹(大口径),镕温 尾翼 重爆,3,导弹_大口径气缸尾翼高爆破甲弹科技,3,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,破甲弹,main_gun/icon_tech_main_gun_heat_38.png
6309,小口径气缸尾翼串联破甲弹科技,火力,1215,穿甲,345,,,镕温 尾翼 前置干扰 分隔弹头 火力4星技能评价 穿甲3星技能评价,串联装药破甲弹,镕温 尾翼 前置干扰 分隔弹头,气缸尾翼串联破甲弹,气缸尾翼串联装药式破甲弹,SA式47mm炮塔,57mm速射6磅炮塔,美M式76.2mm连发炮塔,法SA式75mm炮塔,,,,,,气缸尾翼串联破甲弹(小口径),镕温 尾翼 前置干扰 分隔弹头,3,导弹_小口径气缸尾翼串联破甲弹科技,1,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,破甲弹,main_gun/icon_tech_main_gun_heat_39.png
6310,中口径气缸尾翼串联破甲弹科技,火力,1385,穿甲,320,,,镕温 尾翼 前置干扰 分隔弹头 火力4星技能评价 穿甲3星技能评价,串联装药破甲弹,镕温 尾翼 前置干扰 分隔弹头,气缸尾翼串联破甲弹,气缸尾翼串联装药式破甲弹,17.1倍75mm炮塔,3.7英寸榴弹炮塔,SA式120mm炮塔,DCA式90mm炮塔,,,,,,气缸尾翼串联破甲弹(中口径),镕温 尾翼 前置干扰 分隔弹头,3,导弹_中口径气缸尾翼串联破甲弹科技,2,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,破甲弹,main_gun/icon_tech_main_gun_heat_40.png
6311,中口径稳态扫描末敏弹科技,火力,1160,穿甲,435,,,镕温 杵形弹丸 火力4星技能评价 穿甲4星技能评价,爆炸成型弹丸破甲弹,镕温 杵形弹丸,稳态扫描末敏弹,高精度爆炸成型弹丸稳态扫描末敏弹,3.7英寸榴弹炮塔,法CN式105mm炮塔,SA式120mm炮塔,,,,,,,稳态扫描末敏弹(中口径),镕温 杵形弹丸,3,导弹_中口径稳态扫描末敏弹科技,2,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,破甲弹,main_gun/icon_tech_main_gun_heat_41.png
6312,大口径稳态扫描末敏弹科技,火力,1340,穿甲,410,,,镕温 杵形弹丸 火力4星技能评价 穿甲4星技能评价,爆炸成型弹丸破甲弹,镕温 杵形弹丸,稳态扫描末敏弹,高精度爆炸成型弹丸稳态扫描末敏弹,苏M式152mm榴弹炮塔,美M式203mm加农炮塔,42式105mm榴弹炮塔,,,,,,,稳态扫描末敏弹(大口径),镕温 杵形弹丸,3,导弹_大口径稳态扫描末敏弹科技,3,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,破甲弹,main_gun/icon_tech_main_gun_heat_42.png
6313,小口径气缸尾翼深锥破甲弹科技,火力,475,穿甲,595,,,镕温 尾翼 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 尾翼 深锥药型罩,气缸尾翼深锥破甲弹,气缸尾翼深锥式药型罩高穿深破甲弹,57mm速射6磅炮塔,CN式75mm炮塔,苏M式76.2mm炮塔,美M式76.2mm连发炮塔,,,,,,气缸尾翼深锥破甲弹(小口径),镕温 尾翼 深锥药型罩,3,导弹_小口径气缸尾翼深锥破甲弹科技,1,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,破甲弹,main_gun/icon_tech_main_gun_heat_43.png
6314,中口径气缸尾翼深锥破甲弹科技,火力,670,穿甲,565,,,镕温 尾翼 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 尾翼 深锥药型罩,气缸尾翼深锥破甲弹,气缸尾翼深锥式药型罩高穿深破甲弹,美M式105mm榴弹炮塔,苏D式122mm榴弹炮塔,克虏伯105mm炮塔,DCA式90mm炮塔,,,,,,气缸尾翼深锥破甲弹(中口径),镕温 尾翼 深锥药型罩,3,导弹_中口径气缸尾翼深锥破甲弹科技,2,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,破甲弹,main_gun/icon_tech_main_gun_heat_44.png
6315,大口径气缸尾翼深锥破甲弹科技,火力,860,穿甲,535,,,镕温 尾翼 深锥药型罩 火力3星技能评价 穿甲5星技能评价,默认破甲弹,镕温 尾翼 深锥药型罩,气缸尾翼深锥破甲弹,气缸尾翼深锥式药型罩高穿深破甲弹,苏M式130mm加农炮,18式150mm野战榴弹炮塔,,,,,,,,气缸尾翼深锥破甲弹(大口径),镕温 尾翼 深锥药型罩,3,导弹_大口径气缸尾翼深锥破甲弹科技,3,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,破甲弹,main_gun/icon_tech_main_gun_heat_45.png
7101,中口径杀伤重视型碎甲弹科技,火力,285,穿甲,15,,,震荡 杀伤 火力5星技能评价 穿甲2星技能评价,默认碎甲弹,震荡 杀伤,杀伤重视型碎甲弹,杀伤重视型碎甲弹,3英寸野战速射榴弹炮塔,79式105mm线膛炮塔,5.5英寸榴弹炮塔,,,,,,,杀伤重视型碎甲弹(中口径),震荡 杀伤,1,导弹_中口径杀伤重视型碎甲弹科技,2,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,碎甲弹,main_gun/icon_tech_main_gun_hesh_01.png
7102,大口径杀伤重视型碎甲弹科技,火力,310,穿甲,10,,,震荡 杀伤 火力5星技能评价 穿甲2星技能评价,默认碎甲弹,震荡 杀伤,杀伤重视型碎甲弹,杀伤重视型碎甲弹,165mm爆破炮塔,德210mm迫击炮塔,苏M式152mm榴弹炮塔,,,,,,,杀伤重视型碎甲弹(大口径),震荡 杀伤,1,导弹_大口径杀伤重视型碎甲弹科技,3,1,科技点,30,科技素材2型,1,研发图谱1阶,1,银币,500,碎甲弹,main_gun/icon_tech_main_gun_hesh_02.png
7103,中口径爆破重视型碎甲弹科技,火力,85,穿甲,120,,,震荡 重爆 火力2星技能评价 穿甲5星技能评价,爆破型碎甲弹,震荡 重爆,爆破重视型碎甲弹,爆破重视型碎甲弹,3.7英寸榴弹炮塔,42式105mm榴弹炮塔,,,,,,,,爆破重视型碎甲弹(中口径),震荡 重爆,1,导弹_中口径爆破重视型碎甲弹科技,2,2,科技点,65,科技素材2型,2,研发图谱1阶,2,银币,2500,碎甲弹,main_gun/icon_tech_main_gun_hesh_03.png
7104,大口径爆破重视型碎甲弹科技,火力,115,穿甲,115,,,震荡 重爆 火力2星技能评价 穿甲5星技能评价,爆破型碎甲弹,震荡 重爆,爆破重视型碎甲弹,爆破重视型碎甲弹,150mm步兵炮塔,德305mm迫击炮塔,苏M式152mm榴弹炮塔,,,,,,,爆破重视型碎甲弹(大口径),震荡 重爆,1,导弹_大口径爆破重视型碎甲弹科技,3,3,科技点,125,科技素材2型,4,研发图谱1阶,3,银币,2500,碎甲弹,main_gun/icon_tech_main_gun_hesh_04.png
7105,中口径曳光碎甲弹科技,火力,285,穿甲,105,,,震荡 指向 火力4星技能评价 穿甲4星技能评价,指向碎甲弹,震荡 指向,曳光碎甲弹,曳光碎甲弹,3英寸野战速射榴弹炮塔,17.1倍75mm炮塔,5.5英寸榴弹炮塔,,,,,,,曳光碎甲弹(中口径),震荡 指向,1,导弹_中口径曳光碎甲弹科技,2,4,科技点,220,科技素材2型,6,研发图谱2阶,3,银币,5500,碎甲弹,main_gun/icon_tech_main_gun_hesh_05.png
7106,中口径含能破片碎甲弹科技,火力,330,穿甲,115,,,震荡 含能破片 火力4星技能评价 穿甲4星技能评价,含能破片碎甲弹,震荡 含能破片,含能破片碎甲弹,含能破片激发强化碎甲弹,3.7英寸榴弹炮塔,79式105mm线膛炮塔,42式105mm榴弹炮塔,,,,,,,含能破片碎甲弹(中口径),震荡 含能破片,1,导弹_中口径含能破片碎甲弹科技,2,5,科技点,380,科技素材2型,9,研发图谱2阶,4,银币,7500,碎甲弹,main_gun/icon_tech_main_gun_hesh_06.png
7107,大口径含能破片碎甲弹科技,火力,380,穿甲,110,,,震荡 含能破片 火力4星技能评价 穿甲4星技能评价,含能破片碎甲弹,震荡 含能破片,含能破片碎甲弹,含能破片激发强化碎甲弹,165mm爆破炮塔,美M式203mm加农炮塔,43式150mm突击炮塔,,,,,,,含能破片碎甲弹(大口径),震荡 含能破片,1,导弹_大口径含能破片碎甲弹科技,3,6,科技点,650,科技素材2型,12,研发图谱2阶,5,银币,7500,碎甲弹,main_gun/icon_tech_main_gun_hesh_07.png
7201,中口径改良弹头杀伤碎甲弹科技,火力,1005,穿甲,55,,,震荡 杀伤 火力5星技能评价 穿甲2星技能评价,默认碎甲弹,震荡 杀伤,改良弹头杀伤碎甲弹,杀伤重视型改良弹头碎甲弹,3英寸野战速射榴弹炮塔,79式105mm线膛炮塔,5.5英寸榴弹炮塔,,,,,,,改良弹头杀伤碎甲弹(中口径),震荡 杀伤,2,导弹_中口径改良弹头杀伤碎甲弹科技,2,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,碎甲弹,main_gun/icon_tech_main_gun_hesh_08.png
7202,大口径改良弹头杀伤碎甲弹科技,火力,1100,穿甲,40,,,震荡 杀伤 火力5星技能评价 穿甲2星技能评价,默认碎甲弹,震荡 杀伤,改良弹头杀伤碎甲弹,杀伤重视型改良弹头碎甲弹,165mm爆破炮塔,德210mm迫击炮塔,苏M式152mm榴弹炮塔,,,,,,,改良弹头杀伤碎甲弹(大口径),震荡 杀伤,2,导弹_大口径改良弹头杀伤碎甲弹科技,3,1,科技点,1145,科技素材2型,20,研发图谱3阶,5,银币,10500,碎甲弹,main_gun/icon_tech_main_gun_hesh_09.png
7203,中口径改良弹头爆破碎甲弹科技,火力,265,穿甲,325,,,震荡 重爆 火力2星技能评价 穿甲5星技能评价,爆破型碎甲弹,震荡 重爆,改良弹头爆破碎甲弹,杀伤爆破型改良弹头碎甲弹,3.7英寸榴弹炮塔,42式105mm榴弹炮塔,,,,,,,,改良弹头爆破碎甲弹(中口径),震荡 重爆,2,导弹_中口径改良弹头爆破碎甲弹科技,2,2,科技点,1415,科技素材2型,27,研发图谱3阶,6,银币,11500,碎甲弹,main_gun/icon_tech_main_gun_hesh_10.png
7204,大口径改良弹头爆破碎甲弹科技,火力,355,穿甲,310,,,震荡 重爆 火力2星技能评价 穿甲5星技能评价,爆破型碎甲弹,震荡 重爆,改良弹头爆破碎甲弹,杀伤爆破型改良弹头碎甲弹,150mm步兵炮塔,德305mm迫击炮塔,苏M式152mm榴弹炮塔,,,,,,,改良弹头爆破碎甲弹(大口径),震荡 重爆,2,导弹_大口径改良弹头爆破碎甲弹科技,3,3,科技点,1820,科技素材2型,35,研发图谱3阶,7,银币,11500,碎甲弹,main_gun/icon_tech_main_gun_hesh_11.png
7205,中口径改良弹头曳光碎甲弹科技,火力,700,穿甲,235,,,震荡 指向 火力4星技能评价 穿甲4星技能评价,指向碎甲弹,震荡 指向,改良弹头曳光碎甲弹,改良弹头曳光碎甲弹,3英寸野战速射榴弹炮塔,17.1倍75mm炮塔,5.5英寸榴弹炮塔,,,,,,,改良弹头曳光碎甲弹(中口径),震荡 指向,2,导弹_中口径改良弹头曳光碎甲弹科技,2,4,科技点,2375,科技素材2型,46,研发图谱4阶,7,银币,14500,碎甲弹,main_gun/icon_tech_main_gun_hesh_12.png
7206,中口径改良弹头含能碎甲弹科技,火力,745,穿甲,250,,,震荡 含能破片 火力4星技能评价 穿甲4星技能评价,含能破片碎甲弹,震荡 含能破片,改良弹头含能碎甲弹,含能破片激发改良弹头碎甲弹,3.7英寸榴弹炮塔,79式105mm线膛炮塔,42式105mm榴弹炮塔,,,,,,,改良弹头含能碎甲弹(中口径),震荡 含能破片,2,导弹_中口径改良弹头含能碎甲弹科技,2,6,科技点,4090,科技素材2型,77,研发图谱4阶,9,银币,16000,碎甲弹,main_gun/icon_tech_main_gun_hesh_13.png
7027,大口径改良弹头含能碎甲弹科技,火力,860,穿甲,230,,,震荡 含能破片 火力4星技能评价 穿甲4星技能评价,含能破片碎甲弹,震荡 含能破片,改良弹头含能碎甲弹,含能破片激发改良弹头碎甲弹,165mm爆破炮塔,美M式203mm加农炮塔,43式150mm突击炮塔,,,,,,,改良弹头含能碎甲弹(大口径),震荡 含能破片,2,导弹_大口径改良弹头含能碎甲弹科技,3,5,科技点,3115,科技素材2型,60,研发图谱4阶,8,银币,16000,碎甲弹,main_gun/icon_tech_main_gun_hesh_14.png
7301,中口径强化装药旋转碎甲弹科技,火力,945,穿甲,390,命中,100,震荡 自旋稳定 火力3星技能评价 穿甲4星技能评价,默认碎甲弹,震荡 自旋稳定,强化装药旋转碎甲弹,旋转稳定强化装药碎甲弹,3.7英寸榴弹炮塔,79式105mm线膛炮塔,5.5英寸榴弹炮塔,,,,,,,强化装药旋转碎甲弹(中口径),震荡 自旋稳定,3,导弹_中口径强化装药旋转碎甲弹科技,2,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,碎甲弹,main_gun/icon_tech_main_gun_hesh_15.png
7302,大口径强化装药旋转碎甲弹科技,火力,1100,穿甲,365,命中,100,震荡 自旋稳定 火力3星技能评价 穿甲4星技能评价,默认碎甲弹,震荡 自旋稳定,强化装药旋转碎甲弹,旋转稳定强化装药碎甲弹,165mm爆破炮塔,苏M式152mm榴弹炮塔,,,,,,,,强化装药旋转碎甲弹(大口径),震荡 自旋稳定,3,导弹_大口径强化装药旋转碎甲弹科技,3,1,科技点,6440,科技素材2型,148,研发图谱5阶,9,银币,18500,碎甲弹,main_gun/icon_tech_main_gun_hesh_16.png
7303,中口径尾翼曳光改良碎甲弹科技,火力,1035,穿甲,345,,,震荡 尾翼 指向 火力4星技能评价 穿甲4星技能评价,指向碎甲弹,震荡 尾翼 指向,尾翼曳光改良碎甲弹,尾翼稳定改良弹头曳光碎甲弹,3英寸野战速射榴弹炮塔,17.1倍75mm炮塔,,,,,,,,尾翼曳光改良碎甲弹(中口径),震荡 尾翼 指向,3,导弹_中口径尾翼曳光改良碎甲弹科技,2,2,科技点,7370,科技素材2型,188,研发图谱5阶,10,银币,20000,碎甲弹,main_gun/icon_tech_main_gun_hesh_17.png
7304,中口径尾翼杀伤改良碎甲弹科技,火力,1875,穿甲,105,,,震荡 尾翼 指向 火力5星技能评价 穿甲2星技能评价,默认碎甲弹,震荡 尾翼 指向,尾翼杀伤改良碎甲弹,尾翼稳定杀伤重视型改良弹头碎甲弹,3英寸野战速射榴弹炮塔,3.7英寸榴弹炮塔,,,,,,,,尾翼杀伤改良碎甲弹(中口径),震荡 尾翼 指向,3,导弹_中口径尾翼杀伤改良碎甲弹科技,2,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,碎甲弹,main_gun/icon_tech_main_gun_hesh_18.png
7305,大口径尾翼杀伤改良碎甲弹科技,火力,2045,穿甲,75,,,震荡 尾翼 指向 火力5星技能评价 穿甲2星技能评价,默认碎甲弹,震荡 尾翼 指向,尾翼杀伤改良碎甲弹,尾翼稳定杀伤重视型改良弹头碎甲弹,165mm爆破炮塔,德210mm迫击炮塔,苏M式152mm榴弹炮塔,,,,,,,尾翼杀伤改良碎甲弹(大口径),震荡 尾翼 指向,3,导弹_大口径尾翼杀伤改良碎甲弹科技,3,3,科技点,8760,科技素材2型,238,研发图谱5阶,11,银币,21500,碎甲弹,main_gun/icon_tech_main_gun_hesh_19.png
7306,大口径火箭增程改良碎甲弹科技,火力,1290,穿甲,340,隐蔽,30,震荡 增程 火力4星技能评价 穿甲4星技能评价,增程碎甲弹,震荡 增程,火箭增程改良碎甲弹,火箭增程改良弹头碎甲弹,150mm步兵炮塔,43式150mm突击炮塔,,,,,,,,火箭增程改良碎甲弹(大口径),震荡 增程,3,导弹_大口径火箭增程改良碎甲弹科技,3,4,科技点,10630,科技素材2型,300,研发图谱6阶,11,银币,22500,碎甲弹,main_gun/icon_tech_main_gun_hesh_20.png
7307,中口径尾翼爆破改良碎甲弹科技,火力,495,穿甲,590,,,震荡 尾翼 重爆 火力2星技能评价 穿甲5星技能评价,爆破型碎甲弹,震荡 尾翼 重爆,尾翼爆破改良碎甲弹,尾翼稳定爆破重视型改良弹头碎甲弹,3.7英寸榴弹炮塔,42式105mm榴弹炮塔,5.5英寸榴弹炮塔,,,,,,,尾翼爆破改良碎甲弹(中口径),震荡 尾翼 重爆,3,导弹_中口径尾翼爆破改良碎甲弹科技,2,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,碎甲弹,main_gun/icon_tech_main_gun_hesh_21.png
7308,大口径尾翼爆破改良碎甲弹科技,火力,670,穿甲,565,,,震荡 尾翼 重爆 火力2星技能评价 穿甲5星技能评价,爆破型碎甲弹,震荡 尾翼 重爆,尾翼爆破改良碎甲弹,尾翼稳定爆破重视型改良弹头碎甲弹,150mm步兵炮塔,德305mm迫击炮塔,苏M式152mm榴弹炮塔,,,,,,,尾翼爆破改良碎甲弹(大口径),震荡 尾翼 重爆,3,导弹_大口径尾翼爆破改良碎甲弹科技,3,5,科技点,13015,科技素材2型,377,研发图谱6阶,12,银币,24000,碎甲弹,main_gun/icon_tech_main_gun_hesh_22.png
7309,中口径尾翼含能改良碎甲弹科技,火力,1200,穿甲,395,,,震荡 尾翼 含能破片 火力4星技能评价 穿甲4星技能评价,含能破片碎甲弹,震荡 尾翼 含能破片,尾翼含能改良碎甲弹,尾翼稳定含能破片激发改良弹头碎甲弹,3.7英寸榴弹炮塔,79式105mm线膛炮塔,42式105mm榴弹炮塔,,,,,,,尾翼含能改良碎甲弹(中口径),震荡 尾翼 含能破片,3,导弹_中口径尾翼含能改良碎甲弹科技,2,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,碎甲弹,main_gun/icon_tech_main_gun_hesh_23.png
7310,大口径尾翼含能改良碎甲弹科技,火力,1390,穿甲,365,,,震荡 尾翼 含能破片 火力4星技能评价 穿甲4星技能评价,含能破片碎甲弹,震荡 尾翼 含能破片,尾翼含能改良碎甲弹,尾翼稳定含能破片激发改良弹头碎甲弹,165mm爆破炮塔,美M式203mm加农炮塔,43式150mm突击炮塔,,,,,,,尾翼含能改良碎甲弹(大口径),震荡 尾翼 含能破片,3,导弹_大口径尾翼含能改良碎甲弹科技,3,6,科技点,15985,科技素材2型,474,研发图谱6阶,13,银币,25000,碎甲弹,main_gun/icon_tech_main_gun_hesh_24.png
