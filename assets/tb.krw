﻿编号,科技名称,加成属性类型[1],加成属性数值[1],加成属性类型[2],加成属性数值[2],加成属性类型[3],加成属性数值[3],加成属性类型[4],加成属性数值[4],加成属性类型[5],加成属性数值[5],加成属性类型[6],加成属性数值[6],获得技能,简易统计,车身槽[1],车身槽[2],车身槽[3],车身槽[4],车身槽[5],车身槽[6],车身槽[7],车身槽[8],车身槽[9],车身槽[10],角标,星级,图标,图中位置,板块等级,点亮消耗,点亮消耗,点亮消耗,点亮消耗,点亮消耗,点亮消耗,置换币,置换费,图片
201,炮塔中后置直立车体,耐久,250,命中,30,装甲,45,侦察,10,,,,,炮塔中后置直立车体,49,III号坦克车体,IV号坦克车体,VI号歼击车体,T18坦克车体,38t坦克车体,格兰特坦克车体,,,,,抗积雪 抗灌木 抗泥沼,1,设备图标_炮塔中后置直立车体,1,1,科技点,30,科技素材4型,1,研发图谱1阶,1,银币,10000,body_work/icon_tech_bodywork_07.png
202,炮塔前置型直立车体,耐久,250,命中,25,装甲,30,侦察,10,,,,,炮塔前置型直立车体,59,丘吉尔坦克车体,KV坦克车体,雷诺B1坦克车体,VI号坦克车体,BT坦克车体,美重型坦克车体,克伦威尔车体,,,,抗积雪 抗灌木 抗突袭,1,设备图标_炮塔前置型直立车体,2,1,科技点,30,科技素材4型,1,研发图谱1阶,1,银币,10000,body_work/icon_tech_bodywork_10.png
203,步兵炮型车体,耐久,200,命中,25,火力,100,,,,,,,步兵炮型车体,35,38t自行火炮车体,M式自行车体,I号自行车体,II号自行车体,VI号自行车体,SU系自行车体,英式自行车体,,,,抗积雪 广阔适应,1,设备图标_步兵炮型高强度车体,1,2,科技点,65,科技素材4型,2,研发图谱1阶,2,银币,20000,body_work/icon_tech_bodywork_03.png
204,顶部敞开型车体,耐久,65,命中,45,穿甲,35,,,闪避,15,,,顶部敞开型车体,21,Geschutzwagen自反车体,M4无盖车体,M18无盖车体,SU无盖车体,M3全履车体,BTR装甲履带车体,瓦伦丁自反车体,,,,抗积雪 抗碎块,1,设备图标_顶部敞开型改进车体,2,2,科技点,65,科技素材4型,2,研发图谱1阶,2,银币,20000,body_work/icon_tech_bodywork_09.png
205,炮塔中后置倾斜车体,耐久,335,命中,35,装甲,60,,,,,,,炮塔中后置倾斜车体,34,V号坦克车体,谢尔曼坦克车体,AMX后置车体,,,,,,,,抗积雪 抗灌木 抗泥沼 倾斜车体,1,设备图标_炮塔中后置直立车体科技 ,1,3,科技点,125,科技素材4型,4,研发图谱1阶,3,银币,30000,body_work/icon_tech_bodywork_04.png
206,炮塔前置型倾斜车体,耐久,335,命中,30,装甲,40,,,,,,,炮塔前置型倾斜车体,47,T34坦克车体,巡洋坦克车体,IS坦克车体,AMX前置车体,虎II坦克车体,,,,,,抗积雪 抗灌木 抗突袭 倾斜车体,1,设备图标_炮塔前置型倾斜车体科技,2,3,科技点,125,科技素材4型,4,研发图谱1阶,3,银币,30000,body_work/icon_tech_bodywork_05.png
207,低重心型车体,耐久,405,命中,25,穿甲,95,,,隐蔽,15,,,低重心型车体,38,III号突击车体,IV号突击车体,V号突击车体,VI号突击车体,38t突击车体,SU突击车体,,,,,抗积雪 抗突袭 抗泥沼 扁平车体,1,设备图标_低重心型车体科技,1,4,科技点,220,科技素材4型,6,研发图谱2阶,3,银币,50000,body_work/icon_tech_bodywork_02.png
208,炮塔型扁平车体,耐久,475,命中,40,装甲,80,,,隐蔽,10,,,炮塔型扁平车体,22,T24坦克车体,62式坦克车体,T26坦克车体,59式坦克车体,,,,,,,抗积雪 抗突袭 抗泥沼 扁平车体,1,设备图标_炮塔型扁平车体科技,1,5,科技点,380,科技素材4型,9,研发图谱2阶,4,银币,70000,body_work/icon_tech_bodywork_01.png
209,全轮式车体,耐久,135,命中,40,闪避,40,,,隐蔽,20,,,全轮式车体,23,SdKfz231车体,BTR装甲4轮车体,BTR装甲8轮车体,戴姆勒轮式车体,潘哈德轮式车体,,,,,,硬地适应 抗碎块 广阔适应,1,设备图标_全轮式车体科技,1,6,科技点,650,科技素材4型,12,研发图谱2阶,5,银币,100000,body_work/icon_tech_bodywork_08.png
210,半履式车体,耐久,545,命中,40,闪避,15,,,隐蔽,20,,,半履式车体,9,SdKfz251车体,M2半履车体,,,,,,,,,抗积雪 抗泥沼,1,设备图标_半履式车体科技,2,6,科技点,650,科技素材4型,12,研发图谱2阶,5,银币,100000,body_work/icon_tech_bodywork_06.png
211,炮塔中后置直立改进车体,耐久,1120,命中,75,装甲,135,侦察,20,,,,,炮塔中后置直立车体,49,III号坦克车体,IV号坦克车体,VI号歼击车体,T18坦克车体,38t坦克车体,格兰特坦克车体,,,,,抗积雪 抗灌木 抗泥沼,2,设备图标_炮塔中后置直立车体,1,1,科技点,1145,科技素材4型,20,研发图谱3阶,5,银币,130000,body_work/icon_tech_bodywork_07.png
212,炮塔前置型直立改进车体,耐久,1120,命中,60,装甲,90,侦察,20,,,,,炮塔前置型直立车体,59,丘吉尔坦克车体,KV坦克车体,雷诺B1坦克车体,VI号坦克车体,BT坦克车体,美重型坦克车体,克伦威尔车体,,,,抗积雪 抗灌木 抗突袭,2,设备图标_炮塔前置型直立车体,2,1,科技点,1145,科技素材4型,20,研发图谱3阶,5,银币,130000,body_work/icon_tech_bodywork_10.png
213,步兵炮型改进车体,耐久,965,命中,65,火力,300,,,,,,,步兵炮型车体,37,38t自行火炮车体,M式自行车体,I号自行车体,II号自行车体,VI号自行车体,SU系自行车体,喀秋莎自行车体,英式自行车体,,,抗积雪 广阔适应,2,设备图标_步兵炮型高强度车体,1,2,科技点,1415,科技素材4型,27,研发图谱3阶,6,银币,170000,body_work/icon_tech_bodywork_03.png
214,顶部敞开型改进车体,耐久,240,命中,105,穿甲,95,,,闪避,40,,,顶部敞开型车体,21,Geschutzwagen自反车体,M4无盖车体,M18无盖车体,SU无盖车体,M3全履车体,BTR装甲履带车体,瓦伦丁自反车体,,,,抗积雪 抗碎块,2,设备图标_顶部敞开型改进车体,2,2,科技点,1415,科技素材4型,27,研发图谱3阶,6,银币,170000,body_work/icon_tech_bodywork_09.png
215,全轮式改进车体,耐久,255,命中,70,闪避,70,,,隐蔽,30,,,全轮式车体,23,SdKfz231车体,BTR装甲4轮车体,BTR装甲8轮车体,戴姆勒轮式车体,潘哈德轮式车体,,,,,,硬地适应 抗碎块 广阔适应,2,设备图标_全轮式车体科技,1,3,科技点,1820,科技素材4型,35,研发图谱3阶,7,银币,230000,body_work/icon_tech_bodywork_08.png
216,半履式改进车体,耐久,1035,命中,70,闪避,25,,,隐蔽,30,,,半履式车体,9,SdKfz251车体,M2半履车体,,,,,,,,,抗积雪 抗泥沼,2,设备图标_半履式车体科技,2,3,科技点,1820,科技素材4型,35,研发图谱3阶,7,银币,230000,body_work/icon_tech_bodywork_06.png
217,炮塔中后置倾斜改进车体,耐久,1100,命中,90,装甲,160,,,,,,,炮塔中后置倾斜车体,34,V号坦克车体,谢尔曼坦克车体,AMX后置车体,,,,,,,,抗积雪 抗灌木 抗泥沼 倾斜车体,2,设备图标_炮塔中后置直立车体科技 ,1,4,科技点,2375,科技素材4型,46,研发图谱4阶,7,银币,290000,body_work/icon_tech_bodywork_04.png
218,炮塔前置型倾斜改进车体,耐久,1100,命中,75,装甲,105,,,,,,,炮塔前置型倾斜车体,47,T34坦克车体,巡洋坦克车体,IS坦克车体,AMX前置车体,虎II坦克车体,,,,,,抗积雪 抗灌木 抗突袭 倾斜车体,2,设备图标_炮塔前置型倾斜车体科技,2,4,科技点,2375,科技素材4型,46,研发图谱4阶,7,银币,290000,body_work/icon_tech_bodywork_05.png
219,低重心型改进车体,耐久,1170,命中,60,穿甲,230,,,隐蔽,35,,,低重心型车体,38,III号突击车体,IV号突击车体,V号突击车体,VI号突击车体,38t突击车体,SU突击车体,,,,,抗积雪 抗突袭 抗泥沼 扁平车体,2,设备图标_低重心型车体科技,1,5,科技点,3115,科技素材4型,60,研发图谱4阶,8,银币,360000,body_work/icon_tech_bodywork_02.png
220,炮塔型扁平改进车体,耐久,1240,命中,80,装甲,180,,,隐蔽,25,,,炮塔型扁平车体,22,T24坦克车体,62式坦克车体,T26坦克车体,59式坦克车体,,,,,,,抗积雪 抗突袭 抗泥沼 扁平车体,2,设备图标_炮塔型扁平车体科技,1,6,科技点,4090,科技素材4型,77,研发图谱4阶,9,银币,440000,body_work/icon_tech_bodywork_01.png
221,二驱轮式高强度车体,耐久,395,命中,100,闪避,100,,,隐蔽,45,,,全轮式车体,23,SdKfz231车体,BTR装甲4轮车体,BTR装甲8轮车体,戴姆勒轮式车体,潘哈德轮式车体,,,,,,硬地适应 抗碎块 广阔适应,3,设备图标_全轮式车体科技,1,1,科技点,6440,科技素材4型,148,研发图谱5阶,9,银币,540000,body_work/icon_tech_bodywork_08.png
222,半履式高强度车体,耐久,1590,命中,100,闪避,40,,,隐蔽,45,,,半履式车体,9,SdKfz251车体,M2半履车体,,,,,,,,,抗积雪 抗泥沼,3,设备图标_半履式车体科技,2,1,科技点,6440,科技素材4型,148,研发图谱5阶,9,银币,540000,body_work/icon_tech_bodywork_06.png
223,炮塔中后置直立高强度车体,耐久,2075,命中,125,装甲,235,侦察,30,,,,,炮塔中后置直立车体,49,III号坦克车体,IV号坦克车体,VI号歼击车体,T18坦克车体,38t坦克车体,格兰特坦克车体,,,,,抗积雪 抗灌木 抗泥沼,3,设备图标_炮塔中后置直立车体,1,2,科技点,7370,科技素材4型,188,研发图谱5阶,10,银币,640000,body_work/icon_tech_bodywork_07.png
224,炮塔前置型直立高强度车体,耐久,2075,命中,105,装甲,155,侦察,30,,,,,炮塔前置型直立车体,59,丘吉尔坦克车体,KV坦克车体,雷诺B1坦克车体,VI号坦克车体,BT坦克车体,美重型坦克车体,克伦威尔车体,,,,抗积雪 抗灌木 抗突袭,3,设备图标_炮塔前置型直立车体,2,2,科技点,7370,科技素材4型,188,研发图谱5阶,10,银币,640000,body_work/icon_tech_bodywork_10.png
225,步兵炮型高强度车体,耐久,1295,命中,110,火力,520,,,,,,,步兵炮型车体,37,38t自行火炮车体,M式自行车体,I号自行车体,II号自行车体,VI号自行车体,SU系自行车体,喀秋莎自行车体,英式自行车体,,,抗积雪 广阔适应,3,设备图标_步兵炮型高强度车体,1,3,科技点,8760,科技素材4型,238,研发图谱5阶,11,银币,770000,body_work/icon_tech_bodywork_03.png
226,顶部敞开型高强度车体,耐久,430,命中,175,穿甲,160,,,闪避,65,,,顶部敞开型车体,21,Geschutzwagen自反车体,M4无盖车体,M18无盖车体,SU无盖车体,M3全履车体,BTR装甲履带车体,瓦伦丁自反车体,,,,抗积雪 抗碎块,3,设备图标_顶部敞开型改进车体,2,3,科技点,8760,科技素材4型,238,研发图谱5阶,11,银币,770000,body_work/icon_tech_bodywork_09.png
227,炮塔中后置倾斜高强度车体,耐久,1800,命中,135,装甲,255,,,,,,,炮塔中后置倾斜车体,34,V号坦克车体,谢尔曼坦克车体,AMX后置车体,,,,,,,,抗积雪 抗灌木 抗泥沼 倾斜车体,3,设备图标_炮塔中后置直立车体科技 ,1,4,科技点,10630,科技素材4型,300,研发图谱6阶,11,银币,900000,body_work/icon_tech_bodywork_04.png
228,炮塔前置型倾斜高强度车体,耐久,1800,命中,110,装甲,170,,,,,,,炮塔前置型倾斜车体,47,T34坦克车体,巡洋坦克车体,IS坦克车体,AMX前置车体,虎II坦克车体,,,,,,抗积雪 抗灌木 抗突袭 倾斜车体,3,设备图标_炮塔前置型倾斜车体科技,2,4,科技点,10630,科技素材4型,300,研发图谱6阶,11,银币,900000,body_work/icon_tech_bodywork_05.png
229,全驱轮式高强度车体,耐久,1400,命中,115,闪避,20,,,穿甲,265,,,全驱式车体,11,SdKfz231车体,BTR装甲8轮车体,,,,,,,,,硬地适应 抗积雪 广阔适应,3,设备图标_全轮式车体科技,1,5,科技点,13015,科技素材4型,377,研发图谱6阶,12,银币,1050000,body_work/icon_tech_bodywork_08.png
230,低重心型高强度车体,耐久,1870,命中,90,穿甲,350,,,隐蔽,50,,,低重心型车体,38,III号突击车体,IV号突击车体,V号突击车体,VI号突击车体,38t突击车体,SU突击车体,,,,,抗积雪 抗突袭 抗泥沼 扁平车体,3,设备图标_低重心型车体科技,2,5,科技点,13015,科技素材4型,377,研发图谱6阶,12,银币,1050000,body_work/icon_tech_bodywork_02.png
231,炮塔型扁平高强度车体,耐久,1940,命中,120,装甲,270,,,隐蔽,35,,,炮塔型扁平车体,22,T24坦克车体,62式坦克车体,T26坦克车体,59式坦克车体,,,,,,,抗积雪 抗突袭 抗泥沼 扁平车体,3,设备图标_炮塔型扁平车体科技,1,6,科技点,15985,科技素材4型,474,研发图谱6阶,13,银币,1220000,body_work/icon_tech_bodywork_01.png
